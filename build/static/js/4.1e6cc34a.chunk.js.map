{"version":3,"sources":["styles/playBoard.tsx","consts/elements.tsx","components/SmallComponents/NumberSvg.tsx","components/PlayBoard/NumberIcon.tsx","algrithm/optionNumber.ts","components/PlayBoard/NumberOption.tsx","components/PlayBoard/NumberBlock.tsx","consts/hotKeys.ts","components/PlayBoard/index.tsx","containers/PlayBoard/index.ts","styles/playHelper.tsx","components/PlayHelper/index.tsx","containers/PlayHelper/index.ts","components/Share/index.tsx","styles/digitBoard.tsx","components/DigitBoard/Digits.tsx","components/DigitBoard/index.tsx","containers/DigitBoard/index.ts","components/HotKeys/index.tsx","containers/HotKeys/index.ts","views/game.tsx"],"names":["useStyles","makeStyles","palette","spacing","shadows","breakpoints","createStyles","playBoardContainer","display","position","left","width","height","top","transform","down","boardBackgroundColor","main","PlayBoardLine","margin","padding","splitBorder","borderBottom","numberBackgroundColor","contrastText","borderRight","playBoardBlockContainer","cursor","textAlign","verticalAlign","borderRadius","backgroundColor","fill","hightLight","hightLightNumberBackgroundColor","color","numberIconNormal","hidenullIcon","backdrop","background","primary","light","rightPaddingBorder","paddingRight","leftPadding","paddingLeft","bottomPaddingBorder","paddingBottom","topPadding","paddingTop","unchangeableBlock","optionNumberIcon","optionNumberBackgroudColor","optionNumberBlock","fontSize","optionalNumberTopPadding","conflictOne","conflictTwo","conflictThree","conflictFour","conflictFive","conflictSix","conflictSeven","conflictEight","conflictNine","numberIcons","Map","d","NumberSvg","memo","num","SvgProp","GProp","ClearProp","viewBox","style","transformOrigin","get","comparePlayBoardBlock","prevProps","nextProps","unchangeable","showUnchangeable","className","NumberIcon","initNum","classes","classNames","xlinkHref","a","optionNumber","value","x","y","row","column","OptionNumber","Math","floor","compareNumberOption","NumberOption","onMouseEnter","onClick","onMouseLeave","useState","highlight","setHighlight","toggleHighlight","prev","NumberBlock","line","initValue","playRound","showOptionNumber","placeValue","showConflict","conflictValue","blockhighlight","blockOnMouseEnter","blockOnClick","blockOnMouseLeave","values","optionOnMouseEnter","optionOnClick","optionOnMouseLeave","optNumber","Grid","item","container","useMemo","IconButton","disabled","map","c","digitsKeyMap","1","2","3","4","5","6","7","8","9","createDigitsHandlers","handler","args","handlers","Object","keys","forEach","key","index","PlayBoard","initValues","point","blockHighlight","conflictValues","toggleDigitBoardAction","clearBlockHighlightAction","chooseDigitStartAction","chooseDigitAction","playRoundForwardAction","blockHighlightAction","useContext","ThemeContext","darkMode","useCallback","from","to","handleBlockClick","handleOptionClick","mapPlayBoardBlockLine","nums","keyMap","allowChanges","connect","Game","digitBoard","complete","dispatch","bindActionCreators","updateSudokuAction","playRoundBackwardAction","toggleShowOptionNumberAction","theme","numberContainerNormal","up","right","only","haveBorder","border","iconButtonContainer","iconButtonIcon","hideElement","buttonContainers","PlayHelper","setPlaceValueAction","clearPlaceValueAction","toggleShowUnchangeableAction","toggleShowConflictAction","setLevelAction","useSnackbar","enqueueSnackbar","closeSnackbar","completeMessageShowed","setCompleteMessageshowed","useEffect","variant","highlightLoc","setHighlightLoc","showConflictTexts","showOptionNumberIcon","setShowOptionNumberIcon","showUnchangeableSwitch","setShowUnchangeableSwitch","showUnchangeableText","setShowUnchangeableText","showConflictSwitch","setShowConflictSwitch","showConflictText","setShowConflictText","toggleShowUnchangeable","showUnchangeableTexts","toggleShowConflict","mapNumberIcon","Fragment","Array","TipButton","TooltipProp","title","children","arrow","IconButtonProp","Undo","Refresh","VisibilityOutlined","VisibilityOffOutlined","TextField","select","label","defaultValue","onChange","event","target","MenuItem","FormControl","component","FormGroup","aria-label","FormControlLabel","control","Switch","checked","labelPlacement","saveGameAction","loadGameAction","Share","content","Link","href","twitterShareLink","size","modalContainer","alignItems","justifyContent","modal","flexDirection","digitsContainerLine","digitButtonContainer","digitButton","secondary","Digits","numbers","DigitBoard","useRef","current","focus","handleChooseDigit","Modal","open","hideBackdrop","Fade","in","ref","customHotKeys","playHistorys","handleSaveGame","localStorage","setItem","JSON","stringify","toString","SAVE_GAME","preventDefault","LOAD_GAME","valuesSerialized","getItem","initValuesSerialized","playHistorysSerialized","playRoundSerialized","parse","parseInt","HotKeys"],"mappings":"gOAoIeA,EAjIGC,aAAW,oCAAGC,EAAH,EAAGA,QAAkBC,GAArB,EAAYC,QAAZ,EAAqBD,SAASE,EAA9B,EAA8BA,YAA9B,OACzBC,YAAa,CACTC,oBAAkB,GACdC,QAAS,OACTC,SAAU,QACVC,KAAM,MACNC,MAAO,SACPC,OAAQ,WAERC,IAAK,MACLC,UAAW,wBARG,cASbT,EAAYU,KAAK,MAAO,CACrBD,UAAW,qBACXD,IAAK,QAXK,oDAaMX,EAAQc,4BAbd,aAaM,EAA8BC,OAbpC,GAelBC,cAAe,CACXC,OAAQhB,EAAQ,GAChBiB,QAASjB,EAAQ,GACjBS,OAAQ,SAEZS,YAAY,CACRD,QAAQ,UACRD,OAAO,EAEPG,aAAa,kBAAD,iBAAmBpB,EAAQqB,6BAA3B,aAAmB,EAA+BC,cAC9DC,YAAY,kBAAD,iBAAmBvB,EAAQqB,6BAA3B,aAAmB,EAA+BC,cAC7Db,MAAM,UACNC,OAAO,SAEXc,wBAAyB,CACrBjB,SAAU,WACVU,OAAQhB,EAAQ,GAChBiB,QAASjB,EAAQ,GACjBwB,OAAQ,UACRC,UAAW,SACXC,cAAe,GACfC,aAAc,IACdC,gBAAgB,GAAD,iBAAK7B,EAAQqB,6BAAb,aAAK,EAA+BN,MACnDe,KAAK,GAAD,iBAAK9B,EAAQqB,6BAAb,aAAK,EAA+BC,eAE5CS,WAAY,CACRd,OAAQ,EACRC,QAAS,EAETW,gBAAgB,GAAD,iBAAK7B,EAAQgC,uCAAb,aAAK,EAAyCjB,MAC7DkB,MAAM,GAAD,iBAAKjC,EAAQgC,uCAAb,aAAK,EAAyCV,eAEvDY,iBAAkB,CACdjB,OAAQ,EACRC,QAAS,EACTT,MAAM,WAENmB,aAAc,OAElBO,aAAc,CACV7B,QAAS,QAEb8B,SAAU,CACNC,WAAYrC,EAAQsC,QAAQC,OAGhCC,mBAAoB,CAChBC,aAAc,UACdlB,YAAa,uBAEjBmB,YAAa,CACTC,YAAa,WAEjBC,oBAAqB,CACjBC,cAAe,UACfzB,aAAc,uBAElB0B,WAAY,CACRC,WAAY,WAEhBC,kBAAmB,CACfnB,gBAAiB,UAErBoB,iBAAkB,CAEdxC,MAAO,UACPC,OAAQ,UACRe,OAAQ,UAERI,gBAAgB,GAAD,iBAAK7B,EAAQkD,kCAAb,aAAK,EAAoCnC,MACxDe,KAAK,GAAD,iBAAK9B,EAAQkD,kCAAb,aAAK,EAAoC5B,eAEjD6B,kBAAmB,CACfJ,WAAW,UAEXxC,SAAU,WACV6C,SAAU,QAEdC,yBAA0B,CACtBN,WAAY,WAGhBO,YAAa,CACTzB,gBAAiB,QAErB0B,YAAa,CACT1B,gBAAiB,OAErB2B,cAAe,CACX3B,gBAAiB,SAErB4B,aAAc,CACV5B,gBAAiB,UAErB6B,aAAc,CACV7B,gBAAiB,SAErB8B,YAAa,CACT9B,gBAAiB,UAErB+B,cAAe,CACX/B,gBAAiB,QAErBgC,cAAe,CACXhC,gBAAiB,WAErBiC,aAAc,CACVjC,gBAAiB,Y,iCC7HhBkC,EAAc,IAAIC,IAAyB,CACpD,CACI,EACA,sBAAMC,EAAE,mLAEZ,CACI,EACA,sBAAMA,EAAE,2SAEZ,CACI,EACA,sBAAMA,EAAE,6eAEZ,CACI,EACA,sBAAMA,EAAE,iWAEZ,CACI,EACA,sBAAMA,EAAE,8YAEZ,CACI,EACA,sBAAMA,EAAE,ibAEZ,CACI,EACA,sBAAMA,EAAE,yNAEZ,CACI,EACA,sBAAMA,EAAE,skBAEZ,CACI,EACA,sBAAMA,EAAE,gcAEZ,EAAE,EAAG,gC,GAGc,WACA,W,iBCvCVC,EAKRC,gBAAK,YAAwD,IAArDC,EAAoD,EAApDA,IAAoD,IAA/CC,eAA+C,MAArC,GAAqC,MAAjCC,aAAiC,MAAzB,GAAyB,MAArBC,iBAAqB,MAAT,GAAS,EAC7D,OAAa,IAATH,EAEI,6CAAKI,QAAQ,iBAAoBH,GAAjC,aACI,2CAAGzD,UAAU,0BAA0B6D,MAAO,CAAEC,gBAAiB,WAAgBJ,GAAjF,aACKP,EAAYY,IAAIP,SAMzB,+CAASC,GAAT,aACI,cAAC,IAAD,aAAO5D,MAAM,OAAOC,OAAO,QAAW6D,UAMvCL,ICpBf,SAASU,EAAsBC,EAAgBC,GAC3C,OAA+B,IAA3BD,EAAUE,cAEVF,EAAUT,MAAQU,EAAUV,KAC5BS,EAAUG,mBAAqBF,EAAUE,kBACzCH,EAAUI,YAAcH,EAAUG,UAI1C,IAoCeC,EA/BVf,gBAAK,YAAoD,IAAjDC,EAAgD,EAAhDA,IAAKe,EAA2C,EAA3CA,QAASH,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,UACnCG,EAAUtF,IAChB,OAAgB,OAAZqF,EAEI,cAACjB,EAAD,CACIE,IAAKe,EACLd,QAAS,CACLY,UAAWI,IAAWJ,EAAD,eAChBG,EAAQpC,kBAAoBgC,OAMjC,OAARZ,EAEI,qBAAKa,UAAWI,IAAWJ,EAAW,IAAtC,SACI,uBAAOxE,MAAM,OAAOC,OAAO,OAAO4E,UAAU,OAKhD,cAACpB,EAAD,CACIE,IAAKA,EACLC,QAAS,CACLY,UAAWI,IAAWJ,EAAW,SAItDL,GCxCGW,EAAI,KAmBKC,MAlBR,SAAsBC,EAAwBC,EAAWC,GAC5D,IACIC,EAAaC,EAAezB,EAD5B0B,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE3D,IAAKF,EAAM,EAAGA,EAAM,EAAGA,IACfH,EAAMG,GAAKD,KAAOJ,IAClBO,EAAcL,EAAMG,GAAKD,GAAgB,GAAK,MAEtD,IAAKE,EAAS,EAAGA,EAAS,EAAGA,IACrBJ,EAAMC,GAAGG,KAAYN,IACrBO,EAAcL,EAAMC,GAAGG,GAAqB,GAAK,MAEzD,IAAKzB,EAAM,EAAGA,EAAM,EAAGA,IACfqB,EAA0B,EAApBM,KAAKC,MAAMN,EAAI,GAAStB,EAAM,GAAuB,EAApB2B,KAAKC,MAAML,EAAI,GAASI,KAAKC,MAAM5B,EAAM,MAAQmB,IACxFO,EAAcL,EAA0B,EAApBM,KAAKC,MAAMN,EAAI,GAAStB,EAAM,GAAuB,EAApB2B,KAAKC,MAAML,EAAI,GAASI,KAAKC,MAAM5B,EAAM,IAAiB,GAAK,MAE5H,OAAO0B,G,QCXX,SAASG,EAAoBpB,EAAgBC,GACzC,OAAOD,EAAUT,MAAQU,EAAUV,IAGvC,IAoCe8B,EApCsB/B,gBACjC,YAAmD,IAAhDC,EAA+C,EAA/CA,IAAK+B,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACrBjB,EAAUtF,IAD8B,EAEZwG,oBAAS,GAFG,mBAEvCC,EAFuC,KAE5BC,EAF4B,KAGxCC,EAAkB,WACpBD,GAAa,SAACE,GAAD,OAAWA,MAG5B,OACI,qBACIP,aAAc,WACVA,IACAM,KAEJL,QAAS,WACLA,KAEJC,aAAc,WACVI,IACAJ,KAEJpB,UAAWI,IAAWD,EAAQnC,iBAAkB,IAZpD,SAaI,cAAC,EAAD,CACImB,IAAKA,EACLe,QAAS,KACTH,kBAAkB,EAClBC,UAAWI,IAAWD,EAAQnC,iBAAT,eAChBmC,EAAQrD,WAAawE,UAM1CN,GCDJ,IAsIeU,EAtIqBxC,gBAChC,YAmBO,IAAD,EAlBFyC,EAkBE,EAlBFA,KACAf,EAiBE,EAjBFA,OACAzB,EAgBE,EAhBFA,IACAyC,EAeE,EAfFA,UACAC,EAcE,EAdFA,UAEAC,GAYE,EAbFC,WAaE,EAZFD,kBACAE,EAWE,EAXFA,aACAjC,EAUE,EAVFA,iBACAkC,EASE,EATFA,cACAC,EAQE,EARFA,eACAC,EAOE,EAPFA,kBACAC,EAME,EANFA,aACAC,EAKE,EALFA,kBACAC,EAIE,EAJFA,OACAC,EAGE,EAHFA,mBACAC,EAEE,EAFFA,cACAC,EACE,EADFA,mBAEMtC,EAAUtF,IACV6H,EAA2BnC,EAAa+B,EAAQX,EAAMf,GAC5D,OACI,qBAAKZ,UAAWG,EAAQpE,cAAxB,SACI,eAAC4G,EAAA,EAAD,CACIC,MAAI,EACJC,WAAS,EACT7C,UAAWI,KAAU,mBAChBD,EAAQxC,oBAA+B,IAATgE,GAAuB,IAATA,GAD5B,cAEhBxB,EAAQtC,aAAe8D,EAAO,IAFd,cAGhBxB,EAAQ5C,mBAAgC,IAAXqD,GAA2B,IAAXA,GAH7B,cAIhBT,EAAQ1C,cAAgBmD,EAAS,IAJjB,cAKhBT,EAAQjE,aAAa,GALL,IAHzB,UAUK4G,mBAAQ,wBACT,cAACC,EAAA,EAAD,CACI/C,UAAWI,IAAWD,EAAQ5D,wBAAT,eAChB4D,EAAQjD,cAAoC,IAArB4E,GAAqC,OAAR3C,IAEzD+B,aAAc,WACViB,EAAkBR,EAAMf,EAAQzB,IAEpCgC,QAAS,WACa,OAAdS,GAAoBQ,EAAaT,EAAMf,EAAQzB,IAEvDiC,aAAc,WACViB,KAEJW,UAA+B,IAArBlB,GAAqC,OAAR3C,EAb3C,SAcI,cAAC,EAAD,CACIA,IAAKA,EACLe,QAAS0B,EACT7B,iBAAkBA,EAElBC,UAAWI,IAAWD,EAAQlD,kBAAT,mBAChBkD,EAAQrD,WAAaoF,GADL,cAEhB/B,EAAQ9B,YAAc2D,GAAkC,IAAlBC,GAA+B,IAAR9C,GAF7C,cAGhBgB,EAAQ7B,YAAc0D,GAAkC,IAAlBC,GAA+B,IAAR9C,GAH7C,cAIhBgB,EAAQ5B,cAAgByD,GAAkC,IAAlBC,GAA+B,IAAR9C,GAJ/C,cAKhBgB,EAAQ3B,aAAewD,GAAkC,IAAlBC,GAA+B,IAAR9C,GAL9C,cAMhBgB,EAAQ1B,aAAeuD,GAAkC,IAAlBC,GAA+B,IAAR9C,GAN9C,cAOhBgB,EAAQzB,YAAcsD,GAAkC,IAAlBC,GAA+B,IAAR9C,GAP7C,cAQhBgB,EAAQxB,cAAgBqD,GAAkC,IAAlBC,GAA+B,IAAR9C,GAR/C,cAShBgB,EAAQvB,cAAgBoD,GAAkC,IAAlBC,GAA+B,IAAR9C,GAT/C,cAUhBgB,EAAQtB,aAAemD,GAAkC,IAAlBC,GAA+B,IAAR9C,GAV9C,UAc3B,CACEA,EACAyC,EACA7B,EACA+B,EACA3B,EAAQlD,iBACRiF,EACAF,EACAC,EACAE,EACAC,EACAC,EACAE,EACAC,EACAC,IAGHK,mBAAQ,WACL,GAAY,OAAR3D,IAAqC,IAArB2C,GAA2C,OAAdF,EAC7C,OACI,cAACe,EAAA,EAAD,CACIE,WAAS,EACTD,MAAI,EACJ5C,UAAWI,IAAWD,EAAQjC,kBAAT,eAChBiC,EAAQ/B,2BAA6BuD,EAAO,KAJrD,SAMKe,EAAUO,KAAI,SAAC9D,EAAK+D,GAAN,OACX,cAAC,EAAD,CAEI/D,IAAKA,EACL+B,aAAc,WACXqB,EAAmBpD,IAEtBgC,QAAS,WACLqB,EAAcb,EAAMf,EAAQzB,IAEhCiC,aAAc,WACVqB,MAVR,cACgBd,EADhB,iBAC6Bf,EAD7B,gBAC2CsC,EAD3C,iBACqD/D,WAgBtE,CACCmD,EACAnD,EACA2C,EACAF,EACAC,EACA1B,EAAQjC,kBACRiC,EAAQ/B,yBACRwC,EACAe,EACAa,EACAD,EACAE,QArGZ,uBAA4Dd,EAA5D,gBAAwEf,O,QC1EvEuC,EAAa,CACtBC,EAAE,CAAC,KACHC,EAAE,CAAC,KACHC,EAAE,CAAC,KACHC,EAAE,CAAC,KACHC,EAAE,CAAC,KACHC,EAAE,CAAC,KACHC,EAAE,CAAC,KACHC,EAAE,CAAC,KACHC,EAAE,CAAC,MAKA,SAASC,EAAqBC,GAAiB,IAAD,uBAALC,EAAK,iCAALA,EAAK,kBACjD,IAAIC,EAAS,GAMb,OALAC,OAAOC,KAAKf,GAAcgB,SAAQ,SAACC,EAAIC,GACnCL,EAASI,GAAK,WACVN,EAAQO,EAAM,EAAEN,OAGjBC,E,aCwIIM,EAlJcpF,gBACzB,YAiBO,IAhBHoD,EAgBE,EAhBFA,OACAiC,EAeE,EAfFA,WACAC,EAcE,EAdFA,MACAC,EAaE,EAbFA,eACA5C,EAYE,EAZFA,UACAE,EAWE,EAXFA,WACAhC,EAUE,EAVFA,iBACA2E,EASE,EATFA,eACA1C,EAQE,EARFA,aACAF,EAOE,EAPFA,iBACA6C,EAME,EANFA,uBACAC,EAKE,EALFA,0BACAC,EAIE,EAJFA,uBACAC,EAGE,EAHFA,kBACAC,EAEE,EAFFA,uBACAC,EACE,EADFA,qBAEM7E,EAAUtF,IAeZmJ,GAdiBiB,qBAAWC,KAAxBC,SAcKtB,EAZkBuB,uBAAY,SAAC5E,GACJ,OAAjC+D,EAAWC,EAAM/D,GAAG+D,EAAM9D,KAE7BoE,EAAkB,CAAErE,EAAG+D,EAAM/D,EAAGC,EAAG8D,EAAM9D,EAAGF,UAC5CuE,EAAuB,CACnBtE,EAAG+D,EAAM/D,EACTC,EAAG8D,EAAM9D,EACT2E,KAAMb,EAAMhE,MACZ8E,GAAI9E,OAEV,CAACgE,EAAMD,EAAWO,EAAkBC,MAShCQ,EAAmBH,uBAAY,SAACzD,EAAcf,EAAgBJ,GAC/B,OAA7B+D,EAAW5C,GAAMf,KACE,OAAfmB,GACA+C,EAAkB,CAAErE,EAAGkB,EAAMjB,EAAGE,EAAQJ,OAAuB,IAAhBuB,EAAoB,KAAOA,IAC1EgD,EAAuB,CACnBtE,EAAGkB,EACHjB,EAAGE,EACHyE,KAAM7E,EACN8E,GAAIvD,KAGR4C,OAGV,CAAC5C,EAAWwC,EAAWO,EAAkBC,EAAuBJ,IAE5Da,EAAoBJ,uBAAY,SAACzD,EAAcf,EAAgBJ,GACjEsE,EAAkB,CAAErE,EAAGkB,EAAMjB,EAAGE,EAAQJ,UACxCuE,EAAuB,CACnBtE,EAAGkB,EACHjB,EAAGE,EACHyE,KAAM,KACNC,GAAI9E,MAEV,CAACsE,EAAkBC,IASfU,EAAwBL,uBAAY,SAACM,EAAqB/D,GAC5D,OACA,cAACgB,EAAA,EAAD,CAA+BE,WAAS,EAACD,MAAI,EAAC5H,QAAS,EAAvD,SACK0K,EAAKzC,KAAI,SAAC9D,EAAkByB,GAAnB,OACN,cAAC,EAAD,CAEIe,KAAMA,EACNf,OAAQA,EACR0B,OAAQA,EACRnD,IAAKA,EACL0C,UAAWA,EACXE,WAAYA,EACZH,UAAW2C,EAAW5C,GAAMf,GAC5BqB,cAAeyC,EAAe/C,GAAMf,GACpCoB,aAAcA,EACdF,iBAAkBA,EAClB/B,iBAAkBA,EAClBmC,eAAiD,IAAjCuC,EAAe9C,GAAMf,GACrCuB,kBAAmB,SAACR,EAAcf,EAAgBzB,GAC9C0F,EAAuB,CAAEpE,EAAGkB,EAAMjB,EAAGE,EAAQJ,MAAOrB,IACpD6F,EAAqB7F,IAEzBiD,aAAcmD,EACdlD,kBAAmBuC,EACnBrC,mBAAoByC,EACpBxC,cAAegD,EACf/C,mBAAoBmC,GAtBxB,yBAC2BjD,EAD3B,iBACwCf,QAHhD,mBAAuBe,MA4BxB,CACCW,EACAT,EACAE,EACAwC,EACAG,EACA1C,EACAF,EACA/B,EACA0E,EACAc,EACAX,EACAI,EACAQ,EACAZ,EACAC,IAGJ,OACI,mCACK/B,mBAAQ,WACL,OACI,cAAC,UAAD,CAAS6C,OAAQxC,EAAca,SAAUA,EAAU4B,cAAY,EAA/D,SACI,qBAAK5F,UAAWG,EAAQ/E,mBAAoBgG,aAAcwD,EAA1D,SACI,cAACjC,EAAA,EAAD,CAAME,WAAS,EAAC7H,QAAS,EAAzB,SACKsH,EAAOW,IAAIwC,WAK7B,CACC1D,EACAiC,EACA7D,EAAQ/E,mBACRwJ,EACAa,SCrELI,eAhES,SAAC,GAAD,QACpBC,KADoB,MA4BlB,CACFxD,OA7BoB,EAEhBA,OA4BJiC,WA9BoB,EAGhBA,WA4BJC,MA/BoB,EAIhBA,MA4BJuB,WAhCoB,EAKhBA,WA4BJtB,eAjCoB,EAMhBA,eA4BJ5C,UAlCoB,EAOhBA,UA4BJE,WAnCoB,EAQhBA,WA4BJhC,iBApCoB,EAShBA,iBA4BJ2E,eArCoB,EAUhBA,eA4BJ1C,aAtCoB,EAWhBA,aA4BJgE,SAvCoB,EAYhBA,SA4BJlE,iBAxCoB,EAahBA,qBA8BmB,SAACmE,GAAD,OACvBC,6BACI,CACIrB,2BACAsB,uBACAxB,2BACAK,yBACAJ,8BACAG,2BACAqB,4BACAtB,sBACAuB,kCAEJJ,KAQOJ,CAA6CvB,G,8DCH7CzJ,EA5EGC,aAAW,SAACwL,GAAD,eACzBnL,YAAa,CACT2B,WAAY,CACRF,gBAAiB,QAErBK,iBAAkB,CACdjB,OAAQ,EACRC,QAAS,EACTR,OAAQ,QACRD,MAAO,QACPH,QAAS,OACTsB,aAAc,MACd,UAAW,CACPC,gBAAiB,SAGzB2J,uBAAqB,GACjBvK,OAAQ,EACRC,QAAS,GAFQ,cAGhBqK,EAAMpL,YAAYsL,GAAG,MAAQ,CAC1BhL,MAAO,SACPC,OAAQ,SACRJ,QAAS,OACTM,UAAW,qBACXL,SAAU,QACVI,IAAK,OACL+K,MAAO,QAVM,cAYhBH,EAAMpL,YAAYwL,KAAK,MAAQ,CAC5BlL,MAAO,QACPC,OAAQ,OACRJ,QAAS,OACTM,UAAW,qBACXL,SAAU,QACVI,IAAK,OACL+K,MAAO,QAnBM,GAsBrBE,WAAY,CACRC,OAAQ,sBACRjK,aAAc,OAElBkK,oBAAqB,CACjBpL,OAAQ,SACRD,MAAO,SACP,UAAW,CACPoB,gBAAiB,SAGzBkK,eAAgB,CACZrL,OAAQ,UACRD,MAAO,WAIXuL,YAAa,CACT1L,QAAS,QAEb2L,kBAAgB,GACZ1L,SAAU,QACVD,QAAS,OACTM,UAAW,qBACXD,IAAK,OACLH,KAAM,OALM,cAMX+K,EAAMpL,YAAYsL,GAAG,MAAQ,CAC1BhL,MAAO,SACPC,OAAQ,UARA,cAUX6K,EAAMpL,YAAYwL,KAAK,MAAQ,CAC5BlL,MAAO,QACPC,OAAQ,WAZA,Q,4CCiNTwL,EAxPe/H,gBAC1B,YAYO,IAXH8G,EAWE,EAXFA,SACAhB,EAUE,EAVFA,qBACAkC,EASE,EATFA,oBACAC,EAQE,EARFA,sBACAC,EAOE,EAPFA,6BACAjB,EAME,EANFA,mBACAC,EAKE,EALFA,wBACAxB,EAIE,EAJFA,0BACAyC,EAGE,EAHFA,yBACAhB,EAEE,EAFFA,6BACAiB,EACE,EADFA,eAEMnH,EAAUtF,IADd,EAEyC0M,cAAnCC,EAFN,EAEMA,gBAFN,KAEuBC,cAEiCpG,oBACtD,IALF,mBAIKqG,EAJL,KAI4BC,EAJ5B,KAQFC,qBAAU,YACwB,IAA1BF,IAAgD,IAAb1B,IACnCwB,EAAgB,mBAAoB,CAAEK,QAAS,SAC/CF,GAAyB,MAE9B,CAAC3B,EAAS0B,EAAsBF,IAbjC,MAesCnG,mBACpC,GAhBF,mBAeKyG,EAfL,KAemBC,EAfnB,KAoBIC,EAAoB,CAAC,uCAAU,4BApBnC,EAsBqD3G,oBAAS,GAtB9D,mBAsBK4G,EAtBL,KAsB0BC,EAtB1B,OAuB0D7G,oBAAS,GAvBnE,mBAuBK8G,EAvBL,KAuB6BC,GAvB7B,QAwBsD/G,mBAAS,8CAxB/D,qBAwBKgH,GAxBL,MAwB2BC,GAxB3B,SAyBkDjH,oBAAS,GAzB3D,qBAyBKkH,GAzBL,MAyByBC,GAzBzB,SA0B8CnH,mBAAS2G,EAAkB,IA1BzE,qBA0BKS,GA1BL,MA0BuBC,GA1BvB,MA6BIC,GAAyBvD,uBAAY,WACvC,IAAMwD,EAAwB,CAAC,6CAAW,8CAEpCN,GADND,KAAyBO,EAAsB,GACjBA,EAAsB,GACtBA,EAAsB,IACpDR,IAA0B,SAAC3G,GAAD,OAAWA,OACvC,CAAC4G,KAGGQ,GAAqB,WAEjBH,GADND,KAAqBT,EAAkB,GACbA,EAAkB,GAClBA,EAAkB,IAC5CQ,IAAsB,SAAC/G,GAAD,OAAWA,MAkB/BqH,GAAgB1D,uBAAY,SAAC5E,EAAe6D,GAAhB,OAC9B,cAAC1B,EAAA,EAAD,CAA4BC,MAAI,EAAC5C,UAAWG,EAAQlD,iBAApD,SACI,cAAC8F,EAAA,EAAD,CACI7B,aAAc,WACV8D,EAAqBxE,IAEzBW,QAAS,WACD2G,IAAiBtH,GACjB2G,IACAY,EAAgB,KAEhBb,EAAoB1G,GACpBuH,EAAgBvH,KAGxBY,aAAcwD,EACd5E,UAAWI,IAAWD,EAAQlD,kBAdlC,SAeI,cAAC,EAAD,CACIkC,IAAKqB,EACLpB,QAAS,CACLY,UAAWI,IAAWD,EAAQlD,iBAAT,eAChBkD,EAAQrD,WAAagL,IAAiBtH,UApB3D,eAAmBA,MAyBrB,CACEwE,EACA7E,EAAQrD,WACRqD,EAAQlD,iBACR2H,EACAuC,EACAW,EACAZ,IAGJ,OACI,eAAC,IAAM6B,SAAP,WACI,cAACpG,EAAA,EAAD,CAAME,WAAS,EAAC7C,UAAWI,IAAWD,EAAQoG,sBAAuB,IAArE,SACKzD,mBAAQ,kBAAMkG,MAAM3D,KAAKvG,EAAYoF,QAAQjB,IAAI6F,MAAgB,CAACA,OAEvE,eAACnG,EAAA,EAAD,CAAME,WAAS,EAAC7C,UAAWG,EAAQ6G,iBAAnC,UAEKlE,mBAAQ,kBACL,cAACmG,EAAA,EAAD,CACIC,YAAa,CAAEC,MAAO,iCAASC,SAAU,6BAAOC,OAAO,GACvDC,eAAgB,CACZnI,QAASiF,EACTpG,UAAWI,IAAWD,EAAQ0G,oBAAqB,KAJ3D,SAMI,cAAC0C,EAAA,EAAD,CAAMvJ,UAAWI,IAAWD,EAAQ2G,eAAgB,UAE1D,CAAC3G,EAAQ0G,oBAAoB1G,EAAQ2G,eAAeV,IAErDtD,mBAAQ,kBACL,cAACmG,EAAA,EAAD,CACIC,YAAa,CAAEC,MAAO,iCAASC,SAAU,6BAAOC,OAAO,GACvDC,eAAgB,CACZnI,QAAS,WACLwG,GAAyB,GACzBxB,KAEJnG,UAAWI,IAAWD,EAAQ0G,oBAAqB,KAP3D,SASI,cAAC2C,EAAA,EAAD,CAASxJ,UAAWI,IAAWD,EAAQ2G,eAAgB,UAE7D,CAAC3G,EAAQ0G,oBAAoB1G,EAAQ2G,eAAeX,IAErDrD,mBAAQ,kBACL,eAACmG,EAAA,EAAD,CACIC,YAAa,CACTC,MAAOlB,EAAuB,uCAAW,uCACzCmB,SAAU,6BACVC,OAAO,GAEXC,eAAgB,CACZnI,QAAS,WAzF7B+G,GAAwB,SAACzG,GAAD,OAASA,KA2FT4E,KAEJrG,UAAWI,IAAWD,EAAQ0G,oBAAqB,KAX3D,UAaI,cAAC4C,EAAA,EAAD,CACIzJ,UAAWI,IAAWD,EAAQ2G,eAAT,eAChB3G,EAAQ4G,YAAckB,MAG/B,cAACyB,EAAA,EAAD,CACI1J,UAAWI,IAAWD,EAAQ2G,eAAT,eAChB3G,EAAQ4G,aAAekB,WAItC,CACEA,EACA9H,EAAQ4G,YACR5G,EAAQ0G,oBACR1G,EAAQ2G,eACRT,IAGJ,eAACsD,EAAA,EAAD,CACIC,QAAM,EACNC,MAAM,eACNC,aAAc,EACdC,SAAU,SAACC,GACP1C,EAAe0C,EAAMC,OAAOzJ,QALpC,UAOI,cAAC0J,EAAA,EAAD,CAAU1J,MAAO,EAAjB,uCACA,cAAC0J,EAAA,EAAD,CAAU1J,MAAO,EAAjB,2BACA,cAAC0J,EAAA,EAAD,CAAU1J,MAAO,EAAjB,2BACA,cAAC0J,EAAA,EAAD,CAAU1J,MAAO,EAAjB,iCAGR,cAAC2J,EAAA,EAAD,CAAaC,UAAU,WAAvB,SACI,eAACC,EAAA,EAAD,CAAWC,aAAW,WAAW3J,KAAG,EAApC,UACKmC,mBACG,kBACI,cAACyH,EAAA,EAAD,CACI/J,MAAO,eACPgK,QACI,cAACC,EAAA,EAAD,CACIC,QAASvC,EACT4B,SAAU,WACNpB,KACAvB,KAEJpK,MAAM,YAGd6M,MAAOxB,GACPsC,eAAgB,aAGxB,CACItC,GACAF,EACAQ,GACAvB,IAIPtE,mBACG,kBACI,cAACyH,EAAA,EAAD,CACI/J,MAAO,WACPgK,QACI,cAACC,EAAA,EAAD,CACIC,QAASnC,GACTwB,SAAU,WACNlB,KACAxB,KAEJrK,MAAM,YAGd6M,MAAOpB,GACPkC,eAAgB,aAGxB,CACIlC,GACAR,EACAM,GACAM,GACAxB,eCzMjBxB,eApCS,SAAC,GAAD,QACpBC,KADoB,MAMlB,CACF/D,WAPoB,EACZA,WAORiE,SARoB,EACAA,SAQpBnE,UAToB,EACSA,cAWN,SAACoE,GAAD,OACvBC,6BACI,CACIlB,yBACAkC,wBACAC,0BACArC,sBACAsC,iCACAjB,uBACAC,4BACAxB,8BACAyC,6BACAhB,iCACAuE,mBACAC,mBACAvD,oBAEJrB,KAOOJ,CAA6CoB,G,wECnB7C6D,GA3BU5L,gBAAK,YAAkB,IAAf6L,EAAc,EAAdA,QAM7B,OACI,gCACI,cAACC,EAAA,EAAD,CAAMC,KAPW,SAACF,GAAD,sDAAsEA,GAO3EG,CAAiBH,GAA7B,SACI,cAAChI,EAAA,EAAD,CAAY/F,MAAM,UAAUmO,KAAK,SAAjC,SACI,cAAC,KAAD,QAGR,cAACH,EAAA,EAAD,CAAMC,KAVV,wHAUI,SACI,cAAClI,EAAA,EAAD,CAAY/F,MAAM,UAAUmO,KAAK,SAAjC,SACI,cAAC,KAAD,QAGR,cAACH,EAAA,EAAD,CAAMC,KAd0C,4DAchD,SACI,cAAClI,EAAA,EAAD,CAAY/F,MAAM,UAAUmO,KAAK,SAAjC,SACI,cAAC,KAAD,c,oBCiBLtQ,GA/CGC,aAAW,gBAAGC,EAAH,EAAGA,QAAH,EAAYE,QAAZ,EAAqBD,QAArB,EAA8BE,YAA9B,OACzBC,YAAa,CACTiQ,eAAgB,CACZ/P,QAAS,OACTgQ,WAAW,SACXC,eAAgB,UAEpBC,MAAO,CACHlQ,QAAS,OACTmQ,cAAe,SAEf7O,aAAc,GACdhB,UAAW,uBACXL,SAAU,QACVI,IAAK,MACLH,KAAM,OAKVkQ,oBAAoB,CAChBpQ,QAAQ,OACRG,MAAM,SAGNoB,gBAAgB7B,EAAQsC,QAAQvB,MAEpC4P,qBAAqB,CACjBlQ,MAAM,SACNS,QAAQ,UACRD,OAAO,WAEX2P,YAAY,CAER9O,KAAK9B,EAAQ6Q,UAAUvP,aACvBM,aAAa,GACbnB,MAAM,SACNC,OAAO,SAEPQ,QAAQ,GAEZkB,SAAU,CACNC,WAAYrC,EAAQsC,QAAQvB,WCHzB+P,GAhCa3M,gBACxB,YAAmC,IAAjC4M,EAAgC,EAAhCA,QAAQ5K,EAAwB,EAAxBA,aAAaC,EAAW,EAAXA,QAEjBhB,EAAQtF,KAEd,OACI,cAAC8H,EAAA,EAAD,CAAME,WAAS,EAAC7C,UAAWG,EAAQsL,oBAAnC,SACCK,EAAQ7I,KAAI,SAACyC,EAAMrB,GAAP,OACT,cAAC1B,EAAA,EAAD,CAAqCE,WAAS,EAACD,MAAI,EAAC5H,QAAS,EAA7D,SACK0K,EAAKzC,KAAI,SAAC9D,EAAKkF,GAAN,OACN,cAAC1B,EAAA,EAAD,CAA+BC,MAAI,EAAC5H,QAAS,EAA7C,SACI,cAAC+H,EAAA,EAAD,CAAY/C,UAAWG,EAAQuL,qBAC3BxK,aAAc,WACVA,EAAa/B,IAEjBgC,QAAS,WACLA,EAAQhC,IALhB,SAOI,cAACF,EAAD,CACIE,IAAKA,EACLC,QAAS,CAACY,UAAUG,EAAQwL,kBAVxC,oBAAwBxM,QAFhC,wBAA4BkF,YC0CzB0H,GAhDe7M,gBAC1B,YAAmH,IAAhH6G,EAA+G,EAA/GA,WAAYvB,EAAmG,EAAnGA,MAAOM,EAA4F,EAA5FA,kBAAmBC,EAAyE,EAAzEA,uBAAwBC,EAAiD,EAAjDA,qBAAqBL,EAA4B,EAA5BA,uBAC5ExE,EAAUtF,KACV0Q,EAAMS,iBAAuB,MAEnCpE,qBAAU,WAAK,IAAD,EACV,UAAA2D,EAAMU,eAAN,SAAeC,UACjB,CAACnG,IAEH,IAAMoG,EAAkB/G,uBAAY,SAACjG,GACjC2F,EAAkB,2BAAKN,GAAN,IAAahE,MAAOrB,KACrC4F,EAAuB,CACnBtE,EAAG+D,EAAM/D,EACTC,EAAG8D,EAAM9D,EACT2E,KAAMb,EAAMhE,MACZ8E,GAAInG,IAERwF,MACF,CAACH,EAAMM,EAAkBC,EAAuBJ,IAE5CX,EAASH,EAAqBsI,GAEpC,OACI,cAACC,GAAA,EAAD,CAAOC,KAAMtG,EAAYuG,cAAc,EAAMtM,UAAWG,EAAQiL,eAAhE,SACI,cAACmB,GAAA,EAAD,CAAMC,GAAIzG,EAAV,SACI,cAAC,UAAD,CAASJ,OAAQxC,EAAca,SAAUA,EAAzC,SACI,qBAAKhE,UAAWG,EAAQoL,MAAOkB,IAAKlB,EAApC,SACKzI,mBAAQ,WAML,OACI,cAAC,GAAD,CAAQgJ,QANgB,CACxB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAIH5K,aAAc,SAAC/B,GACA,MAAPA,GAAa6F,EAAqB7F,IAE1CgC,QAASgL,MAClB,CAACnH,EAAqBmH,eCtBtCtG,gBApBS,SAAC,GAAD,QAAGC,KAAH,MAAsF,CAC1GtB,MADoB,EAAWA,MAE/BuB,WAFoB,EAAiBA,eAKd,SAACE,GAAD,OACvBC,6BACI,CACIpB,sBACAE,yBACAD,2BACAJ,4BAEJsB,KAOOJ,CAA6CkG,IC8B7CW,GApDiBxN,gBAC9B,YAKwB,IAJrBoD,EAIoB,EAJpBA,OACAiC,EAGoB,EAHpBA,WACAoI,EAEoB,EAFpBA,aACA9K,EACoB,EADpBA,UACAgJ,EAAoB,EAApBA,eAAoB,EAEoBtD,cAAnCC,EAFe,EAEfA,gBAMFoF,GARiB,EAEEnF,cAMJrC,uBAAY,WAC/ByH,aAAaC,QAAQ,SAASC,KAAKC,UAAU1K,IAC7CuK,aAAaC,QAAQ,aAAaC,KAAKC,UAAUzI,IACjDsI,aAAaC,QAAQ,eAAeC,KAAKC,UAAUL,IACnDE,aAAaC,QAAQ,YAAYjL,EAAUoL,YAC3CzF,EAAgB,qBAAqB,CAACK,QAAQ,WAC9C,CAACvF,EAAOiC,EAAWoI,EAAa9K,EAAU2F,KAmBtCxD,EAAW,CACfkJ,UAAW,SAAClD,GACVA,EAAMmD,iBACNP,KAEFQ,UAtBmBhI,uBAAY,WAC/B,IAAIiI,EAAiBR,aAAaS,QAAQ,UACtCC,EAAqBV,aAAaS,QAAQ,cAC1CE,EAAuBX,aAAaS,QAAQ,gBAC5CG,EAAoBZ,aAAaS,QAAQ,aAC7C,GAAGD,GAAoBE,GAAwBC,GAA0BC,EAAoB,CACzF,IAAInL,EAAuByK,KAAKW,MAAML,GAClC9I,EAA2BwI,KAAKW,MAAMH,GACtCZ,EAA2BI,KAAKW,MAAMF,GACtC3L,EAAiB8L,SAASF,EAAoB,IAClD5C,EAAevI,EAAOiC,EAAWoI,EAAa9K,GAC9C2F,EAAgB,qBAAqB,CAACK,QAAQ,cAEhDL,EAAgB,kBAAkB,CAACK,QAAQ,YAE7C,CAACL,EAAgBqD,KAUnB,OACM,cAAC,gBAAD,CAAelF,OAvCN,CACbuH,UAAU,CAAC,UACXE,UAAU,CAAC,WAqCwBpJ,SAAUA,EAAU4B,cAAY,OCrBxDC,gBAzBS,SAAC,GAAD,QAAGC,KAAH,MAKlB,CACFxD,OANoB,EAAUA,OAO9BiC,WAPoB,EAAiBA,WAQrCoI,aARoB,EAA4BA,aAShD9K,UAToB,EAAyCA,cAYtC,SAACoE,GAAD,OACvBC,6BACI,CACI0E,mBACAC,oBAEJ5E,KAOOJ,CAA6C+H,IC1BtD9H,GAAW5G,gBAAK,YAClB,OAD2B,eAEvB,qCACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,CAAO6L,QAAS,WAKbjF","file":"static/js/4.1e6cc34a.chunk.js","sourcesContent":["import { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(({ palette, shadows, spacing, breakpoints }: Theme) =>\r\n    createStyles({\r\n        playBoardContainer: {\r\n            display: 'flex',\r\n            position: 'fixed',\r\n            left: '50%',\r\n            width: '84vmin',\r\n            height: '83.5vmin',\r\n\r\n            top: '50%',\r\n            transform: 'translate(-50%,-50%)',\r\n            [breakpoints.down('sm')]:{\r\n                transform: 'translate(-50%,0%)',\r\n                top: '10%',\r\n            },\r\n            backgroundColor: `${palette.boardBackgroundColor?.main}`,\r\n        },\r\n        PlayBoardLine: {\r\n            margin: spacing(0),\r\n            padding: spacing(0),\r\n            height: '9vmin',\r\n        },\r\n        splitBorder:{\r\n            padding:'0.3vmin',\r\n            margin:0,\r\n            //borderTop:`dashed 0.3vmin ${palette.numberBackgroundColor?.contrastText}`,\r\n            borderBottom:`dashed 0.3vmin ${palette.numberBackgroundColor?.contrastText}`,\r\n            borderRight:`dashed 0.3vmin ${palette.numberBackgroundColor?.contrastText}`,\r\n            width:'9.3vmin',\r\n            height:'9vmin',\r\n        },\r\n        playBoardBlockContainer: {\r\n            position: 'relative',\r\n            margin: spacing(0),\r\n            padding: spacing(0),\r\n            cursor: 'pointer',\r\n            textAlign: 'center',\r\n            verticalAlign: '',\r\n            borderRadius: '0',\r\n            backgroundColor: `${palette.numberBackgroundColor?.main}`,\r\n            fill: `${palette.numberBackgroundColor?.contrastText}`,\r\n        },\r\n        hightLight: {\r\n            margin: 0,\r\n            padding: 0,\r\n\r\n            backgroundColor: `${palette.hightLightNumberBackgroundColor?.main}`,\r\n            color: `${palette.hightLightNumberBackgroundColor?.contrastText}`,\r\n        },\r\n        numberIconNormal: {\r\n            margin: 0,\r\n            padding: 0,\r\n            width:'8.25vmin',\r\n            //height:'8.7vmin',\r\n            borderRadius: '20%',\r\n        },\r\n        hidenullIcon: {\r\n            display: 'none',\r\n        },\r\n        backdrop: {\r\n            background: palette.primary.light,\r\n        },\r\n\r\n        rightPaddingBorder: {\r\n            paddingRight: '0.3vmin',\r\n            borderRight: '0.3vmin solid black',\r\n        },\r\n        leftPadding: {\r\n            paddingLeft: '0.3vmin',\r\n        },\r\n        bottomPaddingBorder: {\r\n            paddingBottom: '0.3vmin',\r\n            borderBottom: '0.3vmin solid black',\r\n        },\r\n        topPadding: {\r\n            paddingTop: '0.3vmin',\r\n        },\r\n        unchangeableBlock: {\r\n            backgroundColor: 'orange',\r\n        },\r\n        optionNumberIcon: {\r\n            //background:\"blue\",\r\n            width: '2.5vmin',\r\n            height: '2.5vmin',\r\n            cursor: 'pointer',\r\n\r\n            backgroundColor: `${palette.optionNumberBackgroudColor?.main}`,\r\n            fill: `${palette.optionNumberBackgroudColor?.contrastText}`,\r\n        },\r\n        optionNumberBlock: {\r\n            paddingTop:\"0.3vmin\",\r\n            //margin:\"0vmin\",\r\n            position: 'relative',\r\n            fontSize: '0rem',\r\n        },\r\n        optionalNumberTopPadding: {\r\n            paddingTop: '0.4vmin',\r\n            //background:\"blue\",\r\n        },\r\n        conflictOne: {\r\n            backgroundColor: 'blue',\r\n        },\r\n        conflictTwo: {\r\n            backgroundColor: 'red',\r\n        },\r\n        conflictThree: {\r\n            backgroundColor: 'black',\r\n        },\r\n        conflictFour: {\r\n            backgroundColor: 'yellow',\r\n        },\r\n        conflictFive: {\r\n            backgroundColor: 'green',\r\n        },\r\n        conflictSix: {\r\n            backgroundColor: 'purple',\r\n        },\r\n        conflictSeven: {\r\n            backgroundColor: 'gray',\r\n        },\r\n        conflictEight: {\r\n            backgroundColor: '#eeeeee',\r\n        },\r\n        conflictNine: {\r\n            backgroundColor: 'red',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nexport const numberIcons = new Map<number, JSX.Element>([\r\n    [\r\n        1,\r\n        <path d='M1082 1800 c-78 -38 -145 -76 -148 -84 -6 -17 22 -159 37 -188 14 -26 30 -23 119 22 44 22 82 40 85 40 2 0 6 -208 7 -462 l3 -463 130 0 130 0 0 600 0 600 -110 2 -110 2 -143 -69z' />,\r\n    ],\r\n    [\r\n        2,\r\n        <path d='M1145 1876 c-119 -27 -245 -95 -245 -132 0 -37 65 -179 84 -182 9 -2 38 10 64 27 129 82 274 82 335 -1 27 -36 33 -115 14 -172 -35 -102 -168 -256 -406 -471 l-111 -100 3 -90 2 -90 410 0 410 0 0 115 0 115 -202 5 -202 5 106 105 c122 120 191 208 233 294 110 224 28 479 -179 557 -72 27 -230 35 -316 15z' />,\r\n    ],\r\n    [\r\n        3,\r\n        <path d='M1155 1874 c-38 -8 -100 -29 -137 -46 -80 -37 -82 -42 -42 -160 30 -90 33 -91 118 -52 167 76 316 42 316 -73 0 -81 -69 -123 -220 -132 l-95 -6 -3 -102 c-3 -119 -14 -110 133 -115 73 -3 99 -9 135 -28 85 -48 111 -124 68 -201 -48 -86 -190 -109 -338 -55 -132 49 -124 51 -154 -47 -32 -104 -32 -122 -4 -142 48 -33 180 -66 288 -72 234 -12 405 68 482 224 28 58 32 75 32 147 0 60 -6 93 -21 128 -26 58 -92 131 -139 153 l-36 17 39 28 c77 57 114 132 116 235 1 130 -74 238 -201 286 -76 28 -238 35 -337 13z' />,\r\n    ],\r\n    [\r\n        4,\r\n        <path d='M1012 1502 l-242 -369 0 -79 c0 -49 5 -85 12 -92 9 -9 80 -12 260 -12 l248 0 0 -132 c0 -73 4 -139 8 -146 7 -9 40 -12 133 -10 l124 3 3 143 3 142 62 0 c36 0 68 5 75 12 16 16 16 190 0 206 -7 7 -39 12 -75 12 l-63 0 -2 343 -3 342 -150 3 -150 2 -243 -368z m280 -149 l-4 -173 -109 0 -109 0 88 133 c49 73 99 152 111 176 12 23 24 41 25 39 1 -1 1 -81 -2 -175z' />,\r\n    ],\r\n    [\r\n        5,\r\n        <path d='M1025 1848 c-10 -46 -76 -581 -73 -596 3 -14 24 -17 158 -17 152 0 156 -1 215 -30 32 -16 68 -42 78 -56 21 -29 33 -103 23 -143 -9 -36 -53 -84 -100 -109 -61 -32 -184 -29 -290 7 -44 15 -85 25 -91 22 -14 -5 -55 -147 -55 -188 0 -17 8 -29 28 -38 111 -51 306 -73 429 -47 248 53 390 240 362 476 -23 199 -190 329 -427 332 l-74 1 6 42 c4 22 10 60 13 83 l6 43 221 2 221 3 0 115 0 115 -322 3 -323 2 -5 -22z' />,\r\n    ],\r\n    [\r\n        6,\r\n        <path d='M1425 1881 c-255 -31 -439 -151 -539 -354 -51 -105 -67 -175 -73 -322 -8 -204 29 -324 135 -437 160 -171 476 -169 638 4 162 174 153 503 -19 632 -115 86 -288 106 -409 47 -21 -10 -38 -16 -38 -12 1 19 76 104 116 132 68 47 132 68 245 81 l100 12 -3 110 -3 111 -45 1 c-25 1 -72 -2 -105 -5z m-77 -644 c52 -35 75 -94 70 -180 -5 -97 -29 -145 -91 -176 -55 -27 -95 -24 -148 12 -61 41 -109 165 -94 244 8 42 71 108 117 122 45 14 107 4 146 -22z' />,\r\n    ],\r\n    [\r\n        7,\r\n        <path d='M884 1857 c-2 -7 -3 -60 -2 -118 l3 -104 258 -3 c141 -1 257 -4 257 -7 0 -3 -104 -214 -232 -468 -148 -297 -229 -470 -225 -480 5 -15 25 -17 140 -17 l134 0 247 512 247 512 -3 91 -3 90 -408 3 c-331 2 -408 0 -413 -11z' />,\r\n    ],\r\n    [\r\n        8,\r\n        <path d='M1220 1880 c-76 -16 -165 -66 -214 -121 -55 -61 -80 -131 -79 -221 0 -84 35 -161 96 -214 l42 -36 -25 -16 c-57 -39 -91 -78 -122 -139 -61 -125 -38 -273 61 -372 102 -102 292 -145 472 -107 186 40 305 163 317 326 10 146 -43 244 -176 326 -2 2 14 19 37 39 22 20 52 61 66 90 85 172 0 364 -190 430 -58 20 -218 29 -285 15z m181 -223 c46 -31 61 -62 56 -121 -4 -43 -10 -55 -45 -88 -48 -45 -66 -46 -132 -13 -57 29 -80 59 -86 112 -13 101 118 170 207 110z m-23 -508 c47 -23 68 -41 87 -73 94 -160 -113 -300 -252 -172 -31 28 -37 40 -41 88 -6 74 17 122 77 159 25 16 50 29 56 29 7 0 40 -14 73 -31z' />,\r\n    ],\r\n    [\r\n        9,\r\n        <path d='M1155 1876 c-268 -67 -408 -364 -289 -613 33 -68 118 -145 192 -174 76 -29 203 -30 284 -2 l57 19 -16 -29 c-23 -45 -92 -115 -140 -144 -55 -32 -125 -50 -227 -59 -44 -4 -84 -12 -88 -18 -4 -6 -8 -52 -8 -102 0 -119 0 -119 132 -110 213 14 339 65 459 185 133 134 190 289 193 521 2 192 -34 310 -123 411 -93 106 -270 154 -426 115z m158 -220 c66 -28 101 -93 113 -210 6 -60 5 -64 -25 -99 -86 -97 -232 -83 -282 27 -32 71 -19 186 28 238 48 55 105 70 166 44z' />,\r\n    ],\r\n    [-1, <></>],\r\n]);\r\n\r\nexport const loadIcon=(<><path d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2z\"></path><path d=\"m-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\" transform={\"rotate(180,12,9.5)\"}></path></>);\r\nexport const saveIcon=(<><path d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2z\"></path><path d=\"m-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"></path></>);\r\n","import React, { FC, memo, SVGProps } from 'react';\r\nimport {numberIcons} from '../../consts/elements';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\r\nexport const NumberSvg: FC<{\r\n    num: number;\r\n    SvgProp?: SVGProps<SVGSVGElement>;\r\n    GProp?: SVGProps<SVGGElement>;\r\n    ClearProp?: SvgIconProps;\r\n}> = memo(({ num, SvgProp = {}, GProp = {}, ClearProp = {} }) => {\r\n    if (num !== -1) {\r\n        return (\r\n            <svg viewBox='0 0 2560 2560' {...SvgProp}>\r\n                <g transform='rotate(180) scale(-1,1)' style={{ transformOrigin: 'center' }} {...GProp}>\r\n                    {numberIcons.get(num)}\r\n                </g>\r\n            </svg>\r\n        );\r\n    } else {\r\n        return (\r\n            <svg {...SvgProp}>\r\n                <Clear width='100%' height='100%' {...ClearProp} />\r\n            </svg>\r\n        );\r\n    }\r\n});\r\n\r\nexport default NumberSvg;\r\n","import React, { FC, memo } from 'react';\r\n\r\nimport { sudokuValue } from '../../types';\r\nimport useStyles from '../../styles/playBoard';\r\nimport classNames from 'classnames';\r\nimport { NumberSvg } from '../SmallComponents/NumberSvg';\r\n\r\nfunction comparePlayBoardBlock(prevProps: any, nextProps: any) {\r\n    if (prevProps.unchangeable === true) return true;\r\n    return (\r\n        prevProps.num === nextProps.num &&\r\n        prevProps.showUnchangeable === nextProps.showUnchangeable &&\r\n        prevProps.className === nextProps.className\r\n    );\r\n}\r\n\r\nconst NumberIcon: FC<{\r\n    num: sudokuValue;\r\n    initNum: sudokuValue;\r\n    showUnchangeable: boolean;\r\n    className: any;\r\n}> = memo(({ num, initNum, showUnchangeable, className }) => {\r\n    const classes = useStyles();\r\n    if (initNum !== null)\r\n        return (\r\n            <NumberSvg\r\n                num={initNum as number}\r\n                SvgProp={{\r\n                    className: classNames(className, {\r\n                        [classes.unchangeableBlock]: showUnchangeable,\r\n                    }),\r\n                }}\r\n                ></NumberSvg>\r\n        );\r\n    else {\r\n        if (num === null) {\r\n            return (\r\n                <svg className={classNames(className, {})}>\r\n                    <image width='100%' height='100%' xlinkHref='' />\r\n                </svg>\r\n            );\r\n        } else\r\n            return (\r\n                <NumberSvg\r\n                    num={num as number}\r\n                    SvgProp={{\r\n                        className: classNames(className, {}),\r\n                    }}></NumberSvg>\r\n            );\r\n    }\r\n}, comparePlayBoardBlock);\r\n\r\nexport default NumberIcon;\r\n","import { sudokuValue } from '../types';\r\n\r\n/**\r\n * 等待完成\r\n * @param value 棋盘数据\r\n * @param y 判断位置的横坐标（从0-8）\r\n * @param x 判断位置的纵坐标（从0-8）\r\n *\r\n * @returns 棋盘中当前位置能填入什么\r\n */\r\nconst a = null;\r\nexport function optionNumber(value: sudokuValue[][], x: number, y: number): sudokuValue[] {\r\n    let OptionNumber: sudokuValue[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n    let row: number, column: number,num:number;\r\n    for (row = 0; row < 9; row++) {\r\n        if (value[row][y] !== a)\r\n            OptionNumber[(value[row][y] as number) - 1] = null;\r\n    }\r\n    for (column = 0; column < 9; column++){\r\n        if (value[x][column] !== a)\r\n            OptionNumber[(value[x][column] as number) - 1] = null;\r\n    }\r\n    for (num = 0; num < 9; num++){\r\n        if (value[Math.floor(x / 3) * 3 + num % 3][Math.floor(y / 3) * 3 + Math.floor(num / 3)] !== a)\r\n            OptionNumber[(value[Math.floor(x / 3) * 3 + num % 3][Math.floor(y / 3) * 3 + Math.floor(num / 3)] as number) - 1] = null;  \r\n    }\r\n    return OptionNumber;\r\n}\r\n\r\nexport default optionNumber;\r\n","import React, { FC, memo, useState } from 'react';\r\n\r\nimport { sudokuValue } from '../../types';\r\nimport useStyles from '../../styles/playBoard';\r\nimport classNames from 'classnames';\r\nimport NumberIcon from './NumberIcon';\r\n\r\nexport interface  localProps {\r\n    key:string;\r\n    num: sudokuValue;\r\n    onMouseEnter: Function;\r\n    onClick: Function;\r\n    onMouseLeave: Function;\r\n}\r\n\r\nfunction compareNumberOption(prevProps: any, nextProps: any) {\r\n    return prevProps.num === nextProps.num;\r\n}\r\n\r\nconst NumberOption: FC<localProps> = memo(\r\n    ({ num, onMouseEnter, onClick, onMouseLeave }) => {\r\n        const classes = useStyles();\r\n        const [highlight, setHighlight] = useState(false);\r\n        const toggleHighlight = () => {\r\n            setHighlight((prev) => !prev);\r\n        };\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={() => {\r\n                    onMouseEnter();\r\n                    toggleHighlight();\r\n                }}\r\n                onClick={() => {\r\n                    onClick();\r\n                }}\r\n                onMouseLeave={() => {\r\n                    toggleHighlight();\r\n                    onMouseLeave();\r\n                }}\r\n                className={classNames(classes.optionNumberIcon, {})}>\r\n                <NumberIcon\r\n                    num={num}\r\n                    initNum={null}\r\n                    showUnchangeable={false}\r\n                    className={classNames(classes.optionNumberIcon, {\r\n                        [classes.hightLight]: highlight,\r\n                    })}\r\n                />\r\n            </div>\r\n        );\r\n    },\r\n    compareNumberOption,\r\n);\r\n\r\nexport default NumberOption;\r\n","import React, { FC, memo, useMemo } from 'react';\r\nimport useStyles from '../../styles/playBoard';\r\nimport classNames from 'classnames';\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nimport { sudokuValue, conflictValue,PlaceValue } from '../../types';\r\nimport NumberIcon from './NumberIcon';\r\nimport optionNumber from '../../algrithm/optionNumber';\r\nimport NumberOption from './NumberOption';\r\n\r\nexport interface localProps {\r\n    key:string;\r\n    line: number;\r\n    column: number;\r\n    num: sudokuValue;\r\n    playRound:number;\r\n    placeValue:PlaceValue;\r\n    initValue: sudokuValue;\r\n    conflictValue: conflictValue;\r\n    showOptionNumber: boolean;\r\n    showConflict: boolean;\r\n    showUnchangeable: boolean;\r\n    blockhighlight: boolean;\r\n    blockOnMouseEnter: Function;\r\n    blockOnClick: Function;\r\n    blockOnMouseLeave: Function;\r\n    values: sudokuValue[][];\r\n    optionOnMouseEnter: Function;\r\n    optionOnClick: Function;\r\n    optionOnMouseLeave: Function;\r\n}\r\n\r\nfunction compareNumberBlock(prevProps: any, nextProps: any) {\r\n    /**\r\n     * 注意有一种情况，当initValue=null,showOptionNumber变为true或者变为false\r\n     * \r\n     * 让组件onBlockClick函数使用useCallBack调用PlayBoard组件里面的placeValue全局变量。在PlayBoard里面该函数更新\r\n     * 了以后，需要让此组件同样跟去placeValue去更新一下才行！这样里面的函数才能同样被更新！\r\n     */\r\n    return (\r\n        prevProps.num === nextProps.num &&\r\n        prevProps.initValue === nextProps.initValue &&\r\n        prevProps.blockhighlight === nextProps.blockhighlight &&\r\n        prevProps.showOptionNumber === nextProps.showOptionNumber &&\r\n        prevProps.showConflict === nextProps.showConflict &&\r\n        prevProps.showUnchangeable === nextProps.showUnchangeable &&\r\n        prevProps.conflictValue === nextProps.conflictValue &&\r\n        prevProps.playRound === nextProps.playRound &&\r\n        prevProps.placeValue === nextProps.placeValue\r\n    );\r\n}\r\n\r\nconst NumberBlock: FC<localProps> = memo(\r\n    ({\r\n        line,\r\n        column,\r\n        num,\r\n        initValue,\r\n        playRound,\r\n        placeValue,\r\n        showOptionNumber,\r\n        showConflict,\r\n        showUnchangeable,\r\n        conflictValue,\r\n        blockhighlight,\r\n        blockOnMouseEnter,\r\n        blockOnClick,\r\n        blockOnMouseLeave,\r\n        values,\r\n        optionOnMouseEnter,\r\n        optionOnClick,\r\n        optionOnMouseLeave,\r\n    }) => {\r\n        const classes = useStyles();\r\n        const optNumber: sudokuValue[] = optionNumber(values, line, column);\r\n        return (\r\n            <div className={classes.PlayBoardLine} key={`PlayBoardLine${line}Block${column}`}>\r\n                <Grid\r\n                    item\r\n                    container\r\n                    className={classNames({\r\n                        [classes.bottomPaddingBorder]: line === 2 || line === 5,\r\n                        [classes.topPadding]: !(line % 3),\r\n                        [classes.rightPaddingBorder]: column === 2 || column === 5,\r\n                        [classes.leftPadding]: !(column % 3),\r\n                        [classes.splitBorder]:true,\r\n                    })}>\r\n                    {useMemo(()=>(\r\n                    <IconButton\r\n                        className={classNames(classes.playBoardBlockContainer, {\r\n                            [classes.hidenullIcon]: showOptionNumber === true && num === null,\r\n                        })}\r\n                        onMouseEnter={() => {\r\n                            blockOnMouseEnter(line, column, num);\r\n                        }}\r\n                        onClick={() => {\r\n                            if (initValue === null) blockOnClick(line, column, num);\r\n                        }}\r\n                        onMouseLeave={() => {\r\n                            blockOnMouseLeave();\r\n                        }}\r\n                        disabled={showOptionNumber === true && num === null}>\r\n                        <NumberIcon\r\n                            num={num}\r\n                            initNum={initValue}\r\n                            showUnchangeable={showUnchangeable}\r\n                            /** 最后一个条件num === 1 | 2 ... 可以去掉，作为优化*/\r\n                            className={classNames(classes.numberIconNormal, {\r\n                                [classes.hightLight]: blockhighlight,\r\n                                [classes.conflictOne]: showConflict && conflictValue === 1 && num === 1,\r\n                                [classes.conflictTwo]: showConflict && conflictValue === 2 && num === 2,\r\n                                [classes.conflictThree]: showConflict && conflictValue === 3 && num === 3,\r\n                                [classes.conflictFour]: showConflict && conflictValue === 4 && num === 4,\r\n                                [classes.conflictFive]: showConflict && conflictValue === 5 && num === 5,\r\n                                [classes.conflictSix]: showConflict && conflictValue === 6 && num === 6,\r\n                                [classes.conflictSeven]: showConflict && conflictValue === 7 && num === 7,\r\n                                [classes.conflictEight]: showConflict && conflictValue === 8 && num === 8,\r\n                                [classes.conflictNine]: showConflict && conflictValue === 9 && num === 9,\r\n                            })}\r\n                        />\r\n                    </IconButton>\r\n                    ),[\r\n                        num,\r\n                        initValue,\r\n                        showUnchangeable,\r\n                        showOptionNumber,\r\n                        classes.numberIconNormal,\r\n                        blockhighlight,\r\n                        showConflict,\r\n                        conflictValue,\r\n                        blockOnMouseEnter,\r\n                        blockOnClick,\r\n                        blockOnMouseLeave,\r\n                        optionOnMouseEnter,\r\n                        optionOnClick,\r\n                        optionOnMouseLeave,\r\n                        ])}\r\n\r\n                    {useMemo(() => {\r\n                        if (num === null && showOptionNumber === true && initValue === null) {\r\n                            return (\r\n                                <Grid\r\n                                    container\r\n                                    item\r\n                                    className={classNames(classes.optionNumberBlock, {\r\n                                        [classes.optionalNumberTopPadding]: !(line % 3),\r\n                                    })}>\r\n                                    {optNumber.map((num, c) => (\r\n                                        <NumberOption\r\n                                            key={`line${line}column${column}index${c}optnum${num}`}\r\n                                            num={num}\r\n                                            onMouseEnter={() => {\r\n                                               optionOnMouseEnter(num);\r\n                                            }}\r\n                                            onClick={() => {\r\n                                                optionOnClick(line, column, num);\r\n                                            }}\r\n                                            onMouseLeave={() => {\r\n                                                optionOnMouseLeave();\r\n                                            }}\r\n                                        />\r\n                                    ))}\r\n                                </Grid>\r\n                            );\r\n                        }\r\n                    }, [\r\n                        values,\r\n                        num,\r\n                        showOptionNumber,\r\n                        initValue,\r\n                        playRound,\r\n                        classes.optionNumberBlock,\r\n                        classes.optionalNumberTopPadding,\r\n                        column,\r\n                        line,\r\n                        optionOnClick,\r\n                        optionOnMouseEnter,\r\n                        optionOnMouseLeave,\r\n\r\n                    ])}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n\r\nexport default NumberBlock;\r\n","\r\nexport const digitsKeyMap={\r\n    1:['1'],\r\n    2:['2'],\r\n    3:['3'],\r\n    4:['4'],\r\n    5:['5'],\r\n    6:['6'],\r\n    7:['7'],\r\n    8:['8'],\r\n    9:['9'],\r\n};\r\n\r\n\r\n\r\nexport function createDigitsHandlers(handler,...args){\r\n    let handlers={};\r\n    Object.keys(digitsKeyMap).forEach((key,index)=>{\r\n        handlers[key]=function(){\r\n            handler(index+1,args);\r\n        }\r\n    })\r\n    return handlers;\r\n};\r\n","import React, { FC, memo, useMemo, useContext, useCallback} from 'react';\r\nimport {Grid } from '@material-ui/core';\r\n\r\nimport useStyles from '../../styles/playBoard';\r\n\r\nimport { sudokuValue} from '../../types';\r\nimport { Props } from '../../containers/PlayBoard';\r\nimport NumberBlock from './NumberBlock';\r\nimport { ThemeContext } from '../../styles/withRoot';\r\nimport {digitsKeyMap,createDigitsHandlers} from '../../consts/hotKeys';\r\nimport { HotKeys } from 'react-hotkeys';\r\n\r\nconst PlayBoard: FC<Props> = memo(\r\n    ({\r\n        values,\r\n        initValues,\r\n        point,\r\n        blockHighlight,\r\n        playRound,\r\n        placeValue,\r\n        showUnchangeable,\r\n        conflictValues,\r\n        showConflict,\r\n        showOptionNumber,\r\n        toggleDigitBoardAction,\r\n        clearBlockHighlightAction,\r\n        chooseDigitStartAction,\r\n        chooseDigitAction,\r\n        playRoundForwardAction,\r\n        blockHighlightAction,\r\n    }) => {\r\n        const classes = useStyles();\r\n        const { darkMode } = useContext(ThemeContext);\r\n\r\n        const handleChooseDigitHotKeys=useCallback((value:sudokuValue) => {\r\n            if(initValues[point.x][point.y] !== null)\r\n                return;\r\n            chooseDigitAction({ x: point.x, y: point.y, value});\r\n            playRoundForwardAction({\r\n                x: point.x,\r\n                y: point.y,\r\n                from: point.value,\r\n                to: value,\r\n            });\r\n        },[point,initValues,chooseDigitAction,playRoundForwardAction]);\r\n\r\n        let handlers=createDigitsHandlers(handleChooseDigitHotKeys);\r\n\r\n        /**\r\n         * 如果不是不可变的数字，当placeValue == null，点击不会对block中数字进行影响，点击应当拉起DigitBoard\r\n         * 如果数字是1-9，对对应block数字设置为1-9\r\n         * 如果数字是-1，代表清空block为空\r\n         */\r\n        const handleBlockClick = useCallback((line: number, column: number, value: sudokuValue) => {\r\n            if (initValues[line][column] === null) {\r\n                if (placeValue !== null) {\r\n                    chooseDigitAction({ x: line, y: column, value: placeValue === -1 ? null : placeValue });\r\n                    playRoundForwardAction({\r\n                        x: line,\r\n                        y: column,\r\n                        from: value,\r\n                        to: placeValue,\r\n                    });\r\n                } else {\r\n                    toggleDigitBoardAction();\r\n                }\r\n            }\r\n        },[placeValue,initValues,chooseDigitAction,playRoundForwardAction,toggleDigitBoardAction])\r\n\r\n        const handleOptionClick = useCallback((line: number, column: number, value: sudokuValue) => {\r\n            chooseDigitAction({ x: line, y: column, value });\r\n            playRoundForwardAction({\r\n                x: line,\r\n                y: column,\r\n                from: null,\r\n                to: value,\r\n            });\r\n        },[chooseDigitAction,playRoundForwardAction]);\r\n\r\n        /**\r\n         * 将1x9数组展开成一横行9个数独block\r\n         * rely props:playRound,values,showOptionNumber,initValues,showUnchangeable,showConflict,conflictValues,blockHighlight\r\n         * @param nums 1x9 matrix\r\n         *\r\n         * @returns JSX.ELEMENT array\r\n         */\r\n        const mapPlayBoardBlockLine = useCallback((nums: sudokuValue[], line: number) => {\r\n            return (\r\n            <Grid key={`PlayBoard${line}`} container item spacing={0}>\r\n                {nums.map((num: sudokuValue, column: number) => (\r\n                    <NumberBlock\r\n                        key={`NumberBlockLine${line}Column${column}`}\r\n                        line={line}\r\n                        column={column}\r\n                        values={values}\r\n                        num={num}\r\n                        playRound={playRound}\r\n                        placeValue={placeValue}\r\n                        initValue={initValues[line][column]}\r\n                        conflictValue={conflictValues[line][column]}\r\n                        showConflict={showConflict}\r\n                        showOptionNumber={showOptionNumber}\r\n                        showUnchangeable={showUnchangeable}\r\n                        blockhighlight={blockHighlight[line][column] === 1 ? true : false}\r\n                        blockOnMouseEnter={(line: number, column: number, num: sudokuValue) => {\r\n                            chooseDigitStartAction({ x: line, y: column, value: num });\r\n                            blockHighlightAction(num);\r\n                        }}\r\n                        blockOnClick={handleBlockClick}\r\n                        blockOnMouseLeave={clearBlockHighlightAction}\r\n                        optionOnMouseEnter={blockHighlightAction}\r\n                        optionOnClick={handleOptionClick}\r\n                        optionOnMouseLeave={clearBlockHighlightAction}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        )},[\r\n            values,\r\n            playRound,\r\n            placeValue,\r\n            initValues,\r\n            conflictValues,\r\n            showConflict,\r\n            showOptionNumber,\r\n            showUnchangeable,\r\n            blockHighlight,\r\n            handleBlockClick,\r\n            clearBlockHighlightAction,\r\n            blockHighlightAction,\r\n            handleOptionClick,\r\n            clearBlockHighlightAction,\r\n            chooseDigitStartAction,\r\n        ]);\r\n\r\n        return (\r\n            <>\r\n                {useMemo(() => {\r\n                    return (\r\n                        <HotKeys keyMap={digitsKeyMap} handlers={handlers} allowChanges>\r\n                            <div className={classes.playBoardContainer} onMouseLeave={clearBlockHighlightAction}>\r\n                                <Grid container spacing={0}>\r\n                                    {values.map(mapPlayBoardBlockLine)}\r\n                                </Grid>\r\n                            </div>\r\n                        </HotKeys>\r\n                    );\r\n                }, [\r\n                    placeValue,\r\n                    handlers,\r\n                    classes.playBoardContainer,\r\n                    clearBlockHighlightAction,\r\n                    mapPlayBoardBlockLine,\r\n                ])}\r\n            </>\r\n        );\r\n    },\r\n);\r\n\r\nexport default PlayBoard;\r\n","import { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\n\r\nimport {\r\n    chooseDigitStartAction,\r\n    updateSudokuAction,\r\n    clearBlockHighlightAction,\r\n    toggleDigitBoardAction,\r\n    blockHighlightAction,\r\n    playRoundForwardAction,\r\n    playRoundBackwardAction,\r\n    chooseDigitAction,\r\n    toggleShowOptionNumberAction,\r\n} from '../../actions';\r\nimport { Point, sudokuValue, conflictValue, PlaceValue } from '../../types';\r\nimport { StoreState } from '../../reducers';\r\nimport PlayBoard from '../../components/PlayBoard';\r\n\r\nconst mapStateToProps = ({\r\n    Game: {\r\n        values,\r\n        initValues,\r\n        point,\r\n        digitBoard,\r\n        blockHighlight,\r\n        playRound,\r\n        placeValue,\r\n        showUnchangeable,\r\n        conflictValues,\r\n        showConflict,\r\n        complete,\r\n        showOptionNumber,\r\n    },\r\n}: StoreState): {\r\n    values: sudokuValue[][];\r\n    initValues: sudokuValue[][];\r\n    point: Point;\r\n    digitBoard: boolean;\r\n    blockHighlight: number[][];\r\n    playRound: number;\r\n    placeValue: PlaceValue;\r\n    showUnchangeable: boolean;\r\n    conflictValues: conflictValue[][];\r\n    showConflict: boolean;\r\n    complete: boolean;\r\n    showOptionNumber: boolean;\r\n} => ({\r\n    values,\r\n    initValues,\r\n    point,\r\n    digitBoard,\r\n    blockHighlight,\r\n    playRound,\r\n    placeValue,\r\n    showUnchangeable,\r\n    conflictValues,\r\n    showConflict,\r\n    complete,\r\n    showOptionNumber,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n    bindActionCreators(\r\n        {\r\n            chooseDigitStartAction,\r\n            updateSudokuAction,\r\n            toggleDigitBoardAction,\r\n            blockHighlightAction,\r\n            clearBlockHighlightAction,\r\n            playRoundForwardAction,\r\n            playRoundBackwardAction,\r\n            chooseDigitAction,\r\n            toggleShowOptionNumberAction,\r\n        },\r\n        dispatch,\r\n    );\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport type Props = StateProps & DispatchProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayBoard);\r\n","import { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        hightLight: {\r\n            backgroundColor: 'gray',\r\n        },\r\n        numberIconNormal: {\r\n            margin: 0,\r\n            padding: 0,\r\n            height: '8vmin',\r\n            width: '8vmin',\r\n            display: 'flex',\r\n            borderRadius: '20%',\r\n            '&:hover': {\r\n                backgroundColor: 'grey',\r\n            },\r\n        },\r\n        numberContainerNormal: {\r\n            margin: 0,\r\n            padding: 0,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '18vmin',\r\n                height: '50vmin',\r\n                display: 'flex',\r\n                transform: 'translate(0%,-50%)',\r\n                position: 'fixed',\r\n                top: '50vh',\r\n                right: '3vw',\r\n            },\r\n            [theme.breakpoints.only('sm')]: {\r\n                width: '8vmin',\r\n                height: '80vh',\r\n                display: 'flex',\r\n                transform: 'translate(0%,-50%)',\r\n                position: 'fixed',\r\n                top: '50vh',\r\n                right: '1vw',\r\n            },\r\n        },\r\n        haveBorder: {\r\n            border: '0.7vmin solid black',\r\n            borderRadius: '20%',\r\n        },\r\n        iconButtonContainer: {\r\n            height: '10vmin',\r\n            width: '10vmin',\r\n            '&:hover': {\r\n                backgroundColor: 'grey',\r\n            },\r\n        },\r\n        iconButtonIcon: {\r\n            height: '5.5vmin',\r\n            width: '5.5vmin',\r\n            //fontSize:\"6vmin\",\r\n            //color:\"#000000\",\r\n        },\r\n        hideElement: {\r\n            display: 'none',\r\n        },\r\n        buttonContainers: {\r\n            position: 'fixed',\r\n            display: 'flex',\r\n            transform: 'translate(0%,-50%)',\r\n            top: '50vh',\r\n            left: '2vw',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '26vmin',\r\n                height: '8vmin',\r\n            },\r\n            [theme.breakpoints.only('sm')]: {\r\n                width: '8vmin',\r\n                height: '26vmin',\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport default useStyles;\r\n","import React, {FC, memo, useState, useMemo, useEffect, useCallback} from 'react';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport classNames from 'classnames';\r\nimport { numberIcons } from '../../consts/elements';\r\nimport useStyles from '../../styles/playHelper';\r\n\r\nimport { Props } from '../../containers/PlayHelper';\r\nimport TipButton from '../SmallComponents/TipButton';\r\n\r\nimport { Undo, Refresh, VisibilityOutlined, VisibilityOffOutlined } from '@material-ui/icons';\r\nimport NumberSvg from '../SmallComponents/NumberSvg';\r\n\r\nconst PlayHelper: FC<Props> = memo(\r\n    ({\r\n        complete,\r\n        blockHighlightAction,\r\n        setPlaceValueAction,\r\n        clearPlaceValueAction,\r\n        toggleShowUnchangeableAction,\r\n        updateSudokuAction,\r\n        playRoundBackwardAction,\r\n        clearBlockHighlightAction,\r\n        toggleShowConflictAction,\r\n        toggleShowOptionNumberAction,\r\n        setLevelAction,\r\n    }) => {\r\n        const classes = useStyles();\r\n        const { enqueueSnackbar, closeSnackbar } = useSnackbar();   // eslint-disable-line\r\n\r\n        const [completeMessageShowed, setCompleteMessageshowed] = useState(\r\n            false,\r\n        ); /** 数独正确完成，是否展示过成功信息*/\r\n        /** 使用enqueueSnackbar弹出消息框，展示数独成功完成，并将已经展示状态为设置为true */\r\n        useEffect(() => {\r\n            if (completeMessageShowed === false && complete === true) {\r\n                enqueueSnackbar('Sudoku Complete!', { variant: 'info' });\r\n                setCompleteMessageshowed(true);\r\n            }\r\n        }, [complete,completeMessageShowed,enqueueSnackbar]);\r\n\r\n        const [highlightLoc, setHighlightLoc] = useState(\r\n            0,\r\n        ); /** 1-9哪个数字需要高亮，0代表没有数字需要高亮,-1表示删除点击数字*/\r\n\r\n        /** 按钮文本，可更改*/\r\n        const showConflictTexts = ['取消显示冲突', '显示冲突'];\r\n\r\n        const [showOptionNumberIcon,setShowOptionNumberIcon] = useState(false); //true 为可见 false 为不可见\r\n        const [showUnchangeableSwitch, setShowUnchangeableSwitch] = useState(true);\r\n        const [showUnchangeableText, setShowUnchangeableText] = useState('取消不可变显示');\r\n        const [showConflictSwitch, setShowConflictSwitch] = useState(true);\r\n        const [showConflictText, setShowConflictText] = useState(showConflictTexts[0]);\r\n\r\n        /** toggle button text*/\r\n        const toggleShowUnchangeable = useCallback(() => {\r\n            const showUnchangeableTexts = ['取消不可变显示', '显示不可变显示'];\r\n            showUnchangeableText === showUnchangeableTexts[0]\r\n                ? setShowUnchangeableText(showUnchangeableTexts[1])\r\n                : setShowUnchangeableText(showUnchangeableTexts[0]);\r\n            setShowUnchangeableSwitch((prev) => !prev);\r\n        },[showUnchangeableText]);\r\n\r\n        /** toggle button text*/\r\n        const toggleShowConflict = () => {\r\n            showConflictText === showConflictTexts[0]\r\n                ? setShowConflictText(showConflictTexts[1])\r\n                : setShowConflictText(showConflictTexts[0]);\r\n            setShowConflictSwitch((prev) => !prev);\r\n        };\r\n\r\n        /** toggle button text*/\r\n        const toggleShowOptionNumberIcon=()=>{\r\n            setShowOptionNumberIcon((prev)=>!prev);\r\n        };\r\n\r\n        /**\r\n         * map to show numberIcon 1-9\r\n         *\r\n         * rely props:highligLoc\r\n         *\r\n         * @param value map keys\r\n         * @param index from 0\r\n         *\r\n         * @returns JSX.Element\r\n         */\r\n        const mapNumberIcon = useCallback((value: number, index: number) => (\r\n            <Grid key={`value${value}`} item className={classes.numberIconNormal}>\r\n                <IconButton\r\n                    onMouseEnter={() => {\r\n                        blockHighlightAction(value);\r\n                    }}\r\n                    onClick={() => {\r\n                        if (highlightLoc === value) {\r\n                            clearPlaceValueAction();\r\n                            setHighlightLoc(0);\r\n                        } else {\r\n                            setPlaceValueAction(value);\r\n                            setHighlightLoc(value);\r\n                        }\r\n                    }}\r\n                    onMouseLeave={clearBlockHighlightAction}\r\n                    className={classNames(classes.numberIconNormal)}>\r\n                    <NumberSvg\r\n                        num={value}\r\n                        SvgProp={{\r\n                            className: classNames(classes.numberIconNormal, {\r\n                                [classes.hightLight]: highlightLoc === value,\r\n                            }),\r\n                        }}></NumberSvg>\r\n                </IconButton>\r\n            </Grid>\r\n        ),[\r\n            blockHighlightAction,\r\n            classes.hightLight,\r\n            classes.numberIconNormal,\r\n            clearBlockHighlightAction,\r\n            clearPlaceValueAction,\r\n            highlightLoc,\r\n            setPlaceValueAction,\r\n        ]);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container className={classNames(classes.numberContainerNormal, {})}>\r\n                    {useMemo(() => Array.from(numberIcons.keys()).map(mapNumberIcon), [mapNumberIcon])}\r\n                </Grid>\r\n                <Grid container className={classes.buttonContainers}>\r\n                    {/** 撤销填写数独操作*/}\r\n                    {useMemo(()=>(\r\n                        <TipButton\r\n                            TooltipProp={{ title: '撤回上一步', children: <></>, arrow: true }}\r\n                            IconButtonProp={{\r\n                                onClick: playRoundBackwardAction,\r\n                                className: classNames(classes.iconButtonContainer, {}),\r\n                            }}>\r\n                            <Undo className={classNames(classes.iconButtonIcon, {})} />\r\n                        </TipButton>\r\n                    ),[classes.iconButtonContainer,classes.iconButtonIcon,playRoundBackwardAction])}\r\n                        {/** 开始新一局数独，调用updateSudoku*/}\r\n                    {useMemo(()=>(\r\n                        <TipButton\r\n                            TooltipProp={{ title: '开始新一局', children: <></>, arrow: true }}\r\n                            IconButtonProp={{\r\n                                onClick: ()=> {\r\n                                    setCompleteMessageshowed(false);    /** 开始了新一局游戏，该局游戏还没有显示过success*/\r\n                                    updateSudokuAction();\r\n                                },\r\n                                className: classNames(classes.iconButtonContainer, {}),\r\n                            }}>\r\n                            <Refresh className={classNames(classes.iconButtonIcon, {})} />\r\n                        </TipButton>\r\n                    ),[classes.iconButtonContainer,classes.iconButtonIcon,updateSudokuAction])}\r\n                    {/** 显示或者隐藏可选数字(optionNumber)*/}\r\n                    {useMemo(()=>(\r\n                        <TipButton\r\n                            TooltipProp={{\r\n                                title: showOptionNumberIcon ? '显示可选数字' : '隐藏可选数字',\r\n                                children: <></>,\r\n                                arrow: true,\r\n                            }}\r\n                            IconButtonProp={{\r\n                                onClick: () => {\r\n                                    toggleShowOptionNumberIcon();\r\n                                    toggleShowOptionNumberAction();\r\n                                },\r\n                                className: classNames(classes.iconButtonContainer, {}),\r\n                            }}>\r\n                            <VisibilityOutlined\r\n                                className={classNames(classes.iconButtonIcon, {\r\n                                    [classes.hideElement]: showOptionNumberIcon,\r\n                                })}\r\n                            />\r\n                            <VisibilityOffOutlined\r\n                                className={classNames(classes.iconButtonIcon, {\r\n                                    [classes.hideElement]: !showOptionNumberIcon,\r\n                                })}\r\n                            />\r\n                        </TipButton>\r\n                    ),[\r\n                        showOptionNumberIcon,\r\n                        classes.hideElement,\r\n                        classes.iconButtonContainer,\r\n                        classes.iconButtonIcon,\r\n                        toggleShowOptionNumberAction,\r\n                    ])}\r\n\r\n                    <TextField\r\n                        select\r\n                        label='难度'\r\n                        defaultValue={0}\r\n                        onChange={(event)=>{\r\n                            setLevelAction(event.target.value);\r\n                        }}>\r\n                        <MenuItem value={0}>0超级简单</MenuItem>\r\n                        <MenuItem value={1}>1简单</MenuItem>\r\n                        <MenuItem value={2}>2普通</MenuItem>\r\n                        <MenuItem value={3}>3困难</MenuItem>\r\n                    </TextField>\r\n                </Grid>\r\n                <FormControl component='fieldset'>\r\n                    <FormGroup aria-label='position' row>\r\n                        {useMemo(\r\n                            () => (\r\n                                <FormControlLabel\r\n                                    value={'unchangeable'}\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={showUnchangeableSwitch}\r\n                                            onChange={() => {\r\n                                                toggleShowUnchangeable();\r\n                                                toggleShowUnchangeableAction();\r\n                                            }}\r\n                                            color='primary'\r\n                                        />\r\n                                    }\r\n                                    label={showUnchangeableText}\r\n                                    labelPlacement={'bottom'}\r\n                                />\r\n                            ),\r\n                            [\r\n                                showUnchangeableText,\r\n                                showUnchangeableSwitch,\r\n                                toggleShowUnchangeable,\r\n                                toggleShowUnchangeableAction,\r\n                            ],\r\n                        )}\r\n\r\n                        {useMemo(\r\n                            () => (\r\n                                <FormControlLabel\r\n                                    value={'conflict'}\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={showConflictSwitch}\r\n                                            onChange={() => {\r\n                                                toggleShowConflict();\r\n                                                toggleShowConflictAction();\r\n                                            }}\r\n                                            color='primary'\r\n                                        />\r\n                                    }\r\n                                    label={showConflictText}\r\n                                    labelPlacement={'bottom'}\r\n                                />\r\n                            ),\r\n                            [\r\n                                showConflictText,\r\n                                showOptionNumberIcon,\r\n                                showConflictSwitch,\r\n                                toggleShowConflict,\r\n                                toggleShowConflictAction,\r\n\r\n                            ],\r\n                        )}\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </React.Fragment>\r\n        );\r\n    },\r\n);\r\nexport default PlayHelper;\r\n","import { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\n\r\nimport {\r\n    blockHighlightAction,\r\n    setPlaceValueAction,\r\n    clearPlaceValueAction,\r\n    chooseDigitAction,\r\n    toggleShowUnchangeableAction,\r\n    updateSudokuAction,\r\n    playRoundBackwardAction,\r\n    clearBlockHighlightAction,\r\n    toggleShowConflictAction,\r\n    toggleShowOptionNumberAction,\r\n    saveGameAction,\r\n    loadGameAction,\r\n    setLevelAction,\r\n} from '../../actions';\r\nimport { StoreState } from '../../reducers';\r\n\r\nimport PlayHelper from '../../components/PlayHelper';\r\nimport { PlaceValue } from '../../types';\r\n\r\nconst mapStateToProps = ({\r\n    Game: { placeValue, complete,playRound },\r\n}: StoreState): {\r\n    placeValue: PlaceValue;\r\n    complete: boolean;\r\n    playRound:number;\r\n} => ({\r\n    placeValue,\r\n    complete,\r\n    playRound,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n    bindActionCreators(\r\n        {\r\n            blockHighlightAction,\r\n            setPlaceValueAction,\r\n            clearPlaceValueAction,\r\n            chooseDigitAction,\r\n            toggleShowUnchangeableAction,\r\n            updateSudokuAction,\r\n            playRoundBackwardAction,\r\n            clearBlockHighlightAction,\r\n            toggleShowConflictAction,\r\n            toggleShowOptionNumberAction,\r\n            saveGameAction,\r\n            loadGameAction,\r\n            setLevelAction,\r\n        },\r\n        dispatch,\r\n    );\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\nexport type Props = StateProps & DispatchProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayHelper);\r\n","import React, { FC, memo} from 'react';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Twitter from '@material-ui/icons/Twitter';\r\nimport Facebook from '@material-ui/icons/Facebook';\r\nimport Instagram from '@material-ui/icons/Instagram';\r\n\r\ninterface Props {\r\n    content: string;\r\n}\r\n\r\nconst Share: FC<Props> = memo(({ content }) => {\r\n    const twitterShareLink = (content: string): string => `https://twitter.com/intent/tweet?text=${content}`;\r\n    const facebookShareLink = (content: string): string =>\r\n        'https://www.facebook.com/sharer/sharer.php?u=http://baobao.pink&display=popup&ref=plugin&src=like&kid_directed_site=0';\r\n    const instagramShareLink = (content: string): string => 'https://www.linkedin.com/cws/share?url=http://baobao.pink';\r\n\r\n    return (\r\n        <div>\r\n            <Link href={twitterShareLink(content)}>\r\n                <IconButton color='inherit' size='medium'>\r\n                    <Twitter />\r\n                </IconButton>\r\n            </Link>\r\n            <Link href={facebookShareLink(content)}>\r\n                <IconButton color='inherit' size='medium'>\r\n                    <Facebook />\r\n                </IconButton>\r\n            </Link>\r\n            <Link href={instagramShareLink(content)}>\r\n                <IconButton color='inherit' size='medium'>\r\n                    <Instagram />\r\n                </IconButton>\r\n            </Link>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Share;\r\n","import { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(({ palette, shadows, spacing, breakpoints }: Theme) =>\r\n    createStyles({\r\n        modalContainer: {\r\n            display: 'flex',\r\n            alignItems:'center',\r\n            justifyContent: 'center',\r\n        },\r\n        modal: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n\r\n            borderRadius: 10,\r\n            transform: 'translate(-50%,-50%)',\r\n            position: 'fixed',\r\n            top: '50%',\r\n            left: '50%',\r\n            \r\n            //boxShadow: shadows[5],\r\n            //padding: spacing(1),\r\n        },\r\n        digitsContainerLine:{\r\n            display:'flex',\r\n            width:'40vmin', \r\n            //maxWidth:'35%',\r\n            //margin:'auto',\r\n            backgroundColor:palette.primary.main,\r\n        },\r\n        digitButtonContainer:{\r\n            width:'12vmin',\r\n            padding:'0.3vmin',\r\n            margin:'0.3vmin',\r\n        },\r\n        digitButton:{\r\n            //color:palette.secondary.light,\r\n            fill:palette.secondary.contrastText,\r\n            borderRadius:15,\r\n            width:'12vmin',\r\n            height:'12vmin',\r\n            //margin:spacing(2),\r\n            padding:0,\r\n        },\r\n        backdrop: {\r\n            background: palette.primary.main,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default useStyles;\r\n","import React, { FC, memo } from 'react';\r\nimport {Grid, IconButton} from '@material-ui/core';\r\nimport useStyles from '../../styles/digitBoard';\r\nimport {NumberSvg} from '../SmallComponents/NumberSvg'\r\nexport interface localProps {\r\n    numbers:number[][];\r\n    onMouseEnter:Function;\r\n    onClick:Function;\r\n}\r\n\r\nconst Digits:FC<localProps>=memo(\r\n    ({numbers,onMouseEnter,onClick})=>{\r\n    \r\n    const classes=useStyles();\r\n    \r\n    return (\r\n        <Grid container className={classes.digitsContainerLine}>\r\n        {numbers.map((nums, index) => (\r\n            <Grid key={`DigitBoardLine${index}`} container item spacing={0}>\r\n                {nums.map((num, index) => (\r\n                    <Grid key={`DigitBoard${num}`} item spacing={0}>\r\n                        <IconButton className={classes.digitButtonContainer}\r\n                            onMouseEnter={() => {\r\n                                onMouseEnter(num);\r\n                            }}\r\n                            onClick={()=>{\r\n                                onClick(num);\r\n                        }}>\r\n                            <NumberSvg\r\n                                num={num}\r\n                                SvgProp={{className:classes.digitButton}}\r\n                            >\r\n                            </NumberSvg>\r\n                        </IconButton>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        ))}\r\n    </Grid>\r\n    );\r\n})\r\n\r\nexport default Digits;","import React, { FC, memo, useEffect, useMemo,useRef,useCallback } from 'react';\r\nimport { HotKeys } from \"react-hotkeys\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport useStyles from '../../styles/digitBoard';\r\nimport { Props } from '../../containers/DigitBoard';\r\nimport Digits from './Digits';\r\nimport {sudokuValue} from '../../types';\r\nimport {digitsKeyMap,createDigitsHandlers} from '../../consts/hotKeys';\r\n\r\n\r\nconst DigitBoard: FC<Props> = memo(\r\n    ({ digitBoard, point, chooseDigitAction, playRoundForwardAction, blockHighlightAction,toggleDigitBoardAction}) => {\r\n        const classes = useStyles();\r\n        const modal=useRef<HTMLDivElement>(null);\r\n\r\n        useEffect(()=>{\r\n            modal.current?.focus();\r\n        },[digitBoard])\r\n\r\n        const handleChooseDigit=useCallback((num:number) => {\r\n            chooseDigitAction({ ...point, value: num as sudokuValue });\r\n            playRoundForwardAction({\r\n                x: point.x,\r\n                y: point.y,\r\n                from: point.value,\r\n                to: num as sudokuValue,\r\n            });\r\n            toggleDigitBoardAction();\r\n        },[point,chooseDigitAction,playRoundForwardAction,toggleDigitBoardAction]);\r\n\r\n        const handlers=createDigitsHandlers(handleChooseDigit);\r\n\r\n        return (\r\n            <Modal open={digitBoard} hideBackdrop={true} className={classes.modalContainer}>\r\n                <Fade in={digitBoard}>\r\n                    <HotKeys keyMap={digitsKeyMap} handlers={handlers}>\r\n                        <div className={classes.modal} ref={modal}> \r\n                            {useMemo(()=>{\r\n                                const numbers: number[][] = [\r\n                                    [1, 2, 3],\r\n                                    [4, 5, 6],\r\n                                    [7, 8, 9],\r\n                                ];\r\n                                return (\r\n                                    <Digits numbers={numbers}\r\n                                        onMouseEnter={(num:number)=>{\r\n                                            if (num != null) blockHighlightAction(num as sudokuValue);\r\n                                        }}\r\n                                        onClick={handleChooseDigit} />\r\n                            )},[blockHighlightAction,handleChooseDigit])}\r\n                        </div>\r\n                    </HotKeys>\r\n                </Fade>\r\n            </Modal>\r\n        );\r\n    },\r\n);\r\n\r\nexport default DigitBoard;\r\n","import { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\n\r\nimport { chooseDigitAction, blockHighlightAction, playRoundForwardAction,toggleDigitBoardAction } from '../../actions';\r\nimport { Point} from '../../types';\r\nimport { StoreState } from '../../reducers';\r\n\r\nimport DigitBoard from '../../components/DigitBoard';\r\n\r\nconst mapStateToProps = ({ Game: { point,digitBoard } }: StoreState): { point: Point,digitBoard:boolean } => ({\r\n    point,\r\n    digitBoard,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n    bindActionCreators(\r\n        {\r\n            chooseDigitAction,\r\n            blockHighlightAction,\r\n            playRoundForwardAction,\r\n            toggleDigitBoardAction,\r\n        },\r\n        dispatch,\r\n    );\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\nexport type Props = StateProps & DispatchProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DigitBoard);\r\n","import {GlobalHotKeys } from \"react-hotkeys\";\r\nimport React,{FC,memo, useCallback} from 'react';\r\nimport {Props} from '../../containers/HotKeys';\r\n\r\nimport {sudokuValue,PlayHistory} from '../../types';\r\nimport {useSnackbar} from 'notistack';\r\n\r\nconst customHotKeys:FC<Props> = memo(\r\n  ({\r\n     values,\r\n     initValues,\r\n     playHistorys,\r\n     playRound,\r\n     loadGameAction}) => {\r\n  \r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar(); // eslint-disable-line\r\n  const keyMap = {\r\n    SAVE_GAME:['ctrl+s'],\r\n    LOAD_GAME:['ctrl+l'],\r\n  };\r\n\r\n  const handleSaveGame=useCallback(()=>{\r\n    localStorage.setItem('values',JSON.stringify(values));\r\n    localStorage.setItem('initValues',JSON.stringify(initValues));\r\n    localStorage.setItem('playHistorys',JSON.stringify(playHistorys));\r\n    localStorage.setItem('playRound',playRound.toString());\r\n    enqueueSnackbar('save game success!',{variant:'info'});\r\n  },[values,initValues,playHistorys,playRound,enqueueSnackbar])\r\n\r\n  const handleLoadGame=useCallback(()=>{\r\n    let valuesSerialized=localStorage.getItem('values');\r\n    let initValuesSerialized=localStorage.getItem('initValues');\r\n    let playHistorysSerialized=localStorage.getItem('playHistorys');\r\n    let playRoundSerialized=localStorage.getItem('playRound');\r\n    if(valuesSerialized && initValuesSerialized && playHistorysSerialized && playRoundSerialized){\r\n        let values:sudokuValue[][]=JSON.parse(valuesSerialized);\r\n        let initValues:sudokuValue[][]=JSON.parse(initValuesSerialized);\r\n        let playHistorys:PlayHistory[]=JSON.parse(playHistorysSerialized);\r\n        let playRound:number=parseInt(playRoundSerialized,10);\r\n        loadGameAction(values,initValues,playHistorys,playRound);\r\n        enqueueSnackbar('load game success!',{variant:'info'});\r\n    }else{\r\n      enqueueSnackbar('load game fail!',{variant:'error'});\r\n    }\r\n  },[enqueueSnackbar,loadGameAction])\r\n\r\n  const handlers = {\r\n    SAVE_GAME: (event)=>{\r\n      event.preventDefault();\r\n      handleSaveGame();\r\n    },\r\n    LOAD_GAME:handleLoadGame,\r\n  };\r\n\r\n  return (\r\n        <GlobalHotKeys keyMap={keyMap} handlers={handlers} allowChanges/>\r\n    )\r\n})\r\n\r\nexport default customHotKeys;","import { connect} from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\n\r\nimport {saveGameAction,loadGameAction} from '../../actions';\r\nimport { StoreState } from '../../reducers';\r\n\r\nimport HotKeys from '../../components/HotKeys';\r\nimport { PlayHistory, sudokuValue } from '../../types';\r\n\r\nconst mapStateToProps = ({ Game: {values,initValues,playHistorys,playRound} }: StoreState): {\r\n    values:sudokuValue[][],\r\n    initValues:sudokuValue[][],\r\n    playHistorys:PlayHistory[],\r\n    playRound:number,\r\n} => ({\r\n    values,\r\n    initValues,\r\n    playHistorys,\r\n    playRound,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n    bindActionCreators(\r\n        {\r\n            saveGameAction,\r\n            loadGameAction,\r\n        },\r\n        dispatch,\r\n    );\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\nexport type Props = StateProps & DispatchProps;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HotKeys);\r\n","import React, { FC, memo } from 'react';\r\n\r\nimport PlayBoard from '../containers/PlayBoard';\r\nimport PlayHelper from '../containers/PlayHelper';\r\nimport Share from '../components/Share';\r\nimport DigitBoard from '../containers/DigitBoard';\r\nimport HotKeys from '../containers/HotKeys';\r\n\r\nconst Game: FC = memo(({}) => {\r\n    return (\r\n        <>\r\n            <HotKeys />\r\n            <PlayBoard />\r\n            <PlayHelper />\r\n            <DigitBoard />\r\n            <Share content={''} />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Game;\r\n"],"sourceRoot":""}